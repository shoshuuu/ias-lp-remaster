{"version":3,"file":"component---src-pages-index-tsx-6ba569d14342cf1afb8f.js","mappings":"yGAEA,MAAMA,EAAY,YACZC,EAAY,YACZC,EAAkB,0BAClBC,EAAa,yBACbC,EAAa,WAEbC,EAAqB,IAAIC,OAAO,IAAMF,EAAWG,QACjDC,EAA4B,IAAIF,OAAOF,EAAWG,OAASJ,EAAWI,OAAQ,MAC9EE,EAAyB,IAAIH,OAAO,OAASH,EAAWI,OAAQ,MA6ChEG,EAAY,CAACC,EAAOC,KACzB,GAAuB,iBAAVD,IAAsBE,MAAMC,QAAQH,GAChD,MAAM,IAAII,UAAU,gDAiBrB,GAdAH,EAAU,CACTI,YAAY,EACZC,8BAA8B,KAC3BL,GAWiB,KAPpBD,EADGE,MAAMC,QAAQH,GACTA,EAAMO,KAAIC,GAAKA,EAAEC,SACvBC,QAAOF,GAAKA,EAAEG,SACdC,KAAK,KAECZ,EAAMS,QAGLE,OACT,MAAO,GAGR,MAAME,GAAiC,IAAnBZ,EAAQa,OAC3BC,GAAUA,EAAOF,cACjBE,GAAUA,EAAOC,kBAAkBf,EAAQa,QACtCG,GAAiC,IAAnBhB,EAAQa,OAC3BC,GAAUA,EAAOE,cACjBF,GAAUA,EAAOG,kBAAkBjB,EAAQa,QAE5C,GAAqB,IAAjBd,EAAMW,OACT,OAAOV,EAAQI,WAAaY,EAAYjB,GAASa,EAAYb,GAqB9D,OAlBqBA,IAAUa,EAAYb,KAG1CA,EAhFwB,EAACe,EAAQF,EAAaI,KAC/C,IAAIE,GAAkB,EAClBC,GAAkB,EAClBC,GAAsB,EAE1B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAOJ,OAAQW,IAAK,CACvC,MAAMC,EAAYR,EAAOO,GAErBH,GAAmB9B,EAAUmC,KAAKD,IACrCR,EAASA,EAAOU,MAAM,EAAGH,GAAK,IAAMP,EAAOU,MAAMH,GACjDH,GAAkB,EAClBE,EAAsBD,EACtBA,GAAkB,EAClBE,KACUF,GAAmBC,GAAuB/B,EAAUkC,KAAKD,IACnER,EAASA,EAAOU,MAAM,EAAGH,EAAI,GAAK,IAAMP,EAAOU,MAAMH,EAAI,GACzDD,EAAsBD,EACtBA,GAAkB,EAClBD,GAAkB,IAElBA,EAAkBN,EAAYU,KAAeA,GAAaN,EAAYM,KAAeA,EACrFF,EAAsBD,EACtBA,EAAkBH,EAAYM,KAAeA,GAAaV,EAAYU,KAAeA,EAEvF,CAEA,OAAOR,CAAM,EAsDJW,CAAkB1B,EAAOa,EAAaI,IAG/CjB,EAAQA,EAAM2B,QAAQjC,EAAoB,IAGzCM,EADGC,EAAQK,6BAxDwB,EAACN,EAAOa,KAC5CtB,EAAgBqC,UAAY,EAErB5B,EAAM2B,QAAQpC,GAAiBsC,GAAMhB,EAAYgB,MAsD/CvB,CAA6BN,EAAOa,GAEpCA,EAAYb,GAGjBC,EAAQI,aACXL,EAAQiB,EAAYjB,EAAM8B,OAAO,IAAM9B,EAAMyB,MAAM,IAzDjC,EAACzB,EAAOiB,KAC3BpB,EAA0B+B,UAAY,EACtC9B,EAAuB8B,UAAY,EAE5B5B,EAAM2B,QAAQ9B,GAA2B,CAACkC,EAAGC,IAAef,EAAYe,KAC7EL,QAAQ7B,GAAwBmC,GAAKhB,EAAYgB,MAuD5CC,CAAYlC,EAAOiB,EAAY,EAGvCkB,EAAOC,QAAUrC,EAEjBoC,EAAOC,QAAP,QAAyBrC,C,koBCggBzB,MCjmBasC,EAA2BC,IACC,oBAAhCC,kBACP,YAA6BA,iBAACC,UA6DI,SAAAC,EAGlCC,EACAC,EACAC,GAIA,MAAMtB,EAA8B,CAAC,EAErC,IAAauB,EAAG,uBAmBhB,MAXe,UAAXD,GACFtB,EAAawB,MAAQJ,EACrBpB,EAAayB,OAASJ,GACF,gBAAXC,IAKTC,EAAA,yDAGK,CACLG,UAAAH,EACA,4BAA+B,GAC/BI,MAAO3B,EAEX,CA0GgB,SAAY4B,EAC1BR,EACAC,EACAC,EACAtB,EACAuB,GA4BA,YA5BA,IAAAA,IAAAA,EAAuB,CAAC,GAkBnBM,EAAA,GAAAP,EACH,CAAAQ,QAAA9B,EACA+B,WAAYX,EACZ,kBAAqB,GACrBO,MAAKE,EAAA,GACAN,EAAK,CACRS,QAASX,EAAW,EAAI,KAK9B,UAOmCY,EACjCb,EACAC,EACAC,EACAtB,EACAuB,EACAW,EACAC,EACAC,GAEA,MAAkBC,EAAkB,CAAC,EAEjCH,IACFG,EAAaC,gBAAkBJ,EAEhB,UAAXZ,GACFe,EAAab,MAAQxB,EACrBqC,EAAaZ,OAASF,EACtBc,EAAaC,gBAAkBJ,EAC/BG,EAAaE,SAAW,aACJ,gBAAXjB,GAMW,cAAXA,KALTe,EAAaE,SAAW,WACxBF,EAAaG,IAAM,EACnBH,EAAaI,KAAO,EACpBJ,EAAaK,OAAS,EACtBL,EAAaM,MAAQ,IAUrBR,IACFE,EAAaO,UAAYT,GAGvBC,IACFC,EAAaQ,eAAiBT,GAEhC,MAAYU,EAAAjB,EAAA,GACPT,EAAW,CACd,eAAc,EACd,yBAA4B,GAC5BO,MACEE,EAAA,CAAAG,QAASX,EAAW,EAAI,EACxB0B,WAAkC,wBAC/BV,KAeP,OACFS,CAAA,CCrUA,MAAAE,EAAA,aAkEWC,EAA2C,SAAAC,GAGpD,IAHmEC,OACnE9B,EAAMG,MACNF,EAAKG,OACLzB,GAAAkD,EAEA,MAAe,cAAX7B,EAEAD,EAAAA,cAAiB,wBAAAO,MAAO,CAAEyB,WAAgBpD,EAASsB,EAAS,IAAnB,OAI9B,gBAAXD,EAEAD,EAAAA,cAAA,OAAKO,MAAO,CAAE0B,SAAU/B,EAAOgC,QAAS,UACtClC,EAAAA,cAAA,OACEmC,IAAI,GACJC,KAAK,eACO,qBACZC,IAAA,qDAA0DzD,eAAoBsB,uEAC9EK,MAAO,CACL0B,SAAgB,OAChBC,QAAgB,QAChBf,SAAkB,aAOrB,IACT,EAE0BmB,EAEtB,SAA6CpC,GAAA,IAAtBqC,SAAE3D,GAAoBsB,EAAPC,EAAKqC,EAAAtC,EAAA0B,GAC7C,OACE5B,EAAAA,cAACC,EAAAA,SAAQ,KACPD,EAAAA,cAAC6B,EAAUpB,EAAA,GAAAN,IACVvB,EAEmC,KAG1C,EAAA6D,EAAA,8CAAAC,EAAA,oCC1EWC,EAAkC,SAAc1C,GAAA,IAACoC,IAC1DnC,EAAG0C,OACHhE,EAAM8B,QACNP,EAAOgC,IACPrB,EAAQ,GAAAH,WACRI,GACGd,EAAAe,EAEHwB,EAAAvC,EAAAwC,GAAA,OACEzC,EAAAA,cAAA,MAAAS,EAAA,GACMO,EAAK,CACT6B,SAAS,QACTnC,QAASP,EACTkC,IAAKtB,EAAab,OAAA,EAAe,WACtBa,OAAA,EAAab,EACxB0C,OAAQ7B,EAAanC,OAAA,EACR,cAACmC,OAAA,EAAanC,EAC3BuD,IAAKrB,IAGX,EAEoBgC,EAA2B,SAAgB7C,GAAC,IAAA8C,SAC9D7C,EAAQ8C,QACRpE,EAAU,GAAE+B,WACZR,GAAA,GAEDF,EADIa,EAEH0B,EAAAvC,EAAAyC,GAAA,MAAA3B,EAAcD,EAAMmC,QAAS,MAAA/C,OAAA,EAAAA,EAAU+C,OAAAjC,EAErChB,EAAAA,cAAC2C,EAAUlC,EAAA,GAAAK,EAAWZ,EAAU,CAAA+C,MAAOlC,EAAOJ,WAAYR,KAG5D,OAAKvB,EAAQX,OAAA+B,EAAAA,cAKX,eACGpB,EAAQf,KAAIqF,IAAA,IAAGC,MAAAlD,EAAO2C,OAAA1C,EAAQkD,KAAAxE,GAAAsE,EAAA,OAC7BlD,EAAAA,cAAA,UACEqD,IAAQ,GAAApD,KAASrB,KAAQsB,IACzBkD,KAAMxE,EACNuE,MAAOlD,EACP2C,OAAQzC,EAAaD,OAAA,EACR,cAACC,OAAA,EAAaD,EAC3B+C,MAAOlC,GAAA,IAGVC,GAAAA,CAGP,ECvFA,IAAAsC,EDyFAX,EAAMY,UAAY,CAChBlB,IAAKX,EAAAA,OAAiB8B,WACtBrB,IAAKT,EAAAA,OAAiB8B,WACtBP,MAAOvB,EAAAA,OACPkB,OAAQlB,EAAAA,OACRf,WAAYe,EAAAA,MAGdoB,EAAQW,YAAc,UACtBX,EAAQS,UAAY,CAClBpB,IAAKT,EAAAA,OAAiB8B,WACtB7C,WAAYe,EAAAA,KACZqB,SAAUrB,EAAAA,MAAgB,CACxBW,IAAKX,EAAAA,OAAiB8B,WACtBZ,OAAQlB,EAAAA,OACRuB,MAAOvB,EAAAA,SAETsB,QAAStB,EAAAA,QACPA,EAAAA,UAAoB,CAClBA,EAAAA,MAAgB,CACdyB,MAAOzB,EAAAA,OAAiB8B,WACxBJ,KAAM1B,EAAAA,OACNuB,MAAOvB,EAAAA,OACPkB,OAAQlB,EAAAA,OAAiB8B,aAE3B9B,EAAAA,MAAgB,CACdyB,MAAOzB,EAAAA,OACP0B,KAAM1B,EAAAA,OAAiB8B,WACvBP,MAAOvB,EAAAA,OACPkB,OAAQlB,EAAAA,OAAiB8B,iBCtHjC,MAAAE,EAAA,aASaC,EACX,SAAoB1D,GAAC,IAAA8C,SAAE7C,GAAaD,EAAArB,EAAA4D,EAAAvC,EAAAyD,GAClC,OAAIxD,EAEAF,EAAAA,cAAC8C,EACKrC,EAAA,GAAA7B,EACJ,CAAAmE,SAAU,CACRV,IAAKnC,GACN,iBAEDiC,IAAI,MAAAnC,EAAAA,cAID,MAASS,EAAA,GAAA7B,GAEpB,EAEF+E,EAAYF,YAAc,cAC1BE,EAAYJ,UAAY,CACtBR,SAAUrB,EAAAA,OACVsB,QAA0B,OAAnBM,EAAER,EAAQS,gBAAA,EAARD,EAAmBN,QAC5Bb,IAAK,SAAUnC,EAAOC,EAAUC,GAC9B,OAAKF,EAAMC,GAIJ,IAAS2D,MACd,kBAAkB3D,qBAA4BC,2BAH/C,IAKH,GClCW,MAAA2D,EAAoC,SAAmB5D,GAClE,OACED,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC8C,EAAYrC,EAAA,GAAAR,IACbD,EAAAA,cAAA,gBACEA,EAAAA,cAAC8C,EAAYrC,EAAA,GAAAR,EAAA,CAAOU,YAAA,MAI5B,EAEAkD,EAAUJ,YAAc,YACxBI,EAAUN,UAAYT,EAAQS,UAAA,MAAAO,EAAA,8HAAAC,EAAA,sBCRxBC,EAAkBhE,GAAwBA,EAAIf,QAAQ,MAAO,IAmHtDgF,EAA4C,SACvDjE,EACAC,EACAC,GAAA,QAAAgE,EAAAC,UAAAlG,OACGW,EAAA,IAAApB,MAAA0G,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAxF,EAAAwF,EAAA,GAAAD,UAAAC,GAAA,OAEEpE,EAAMmC,KAAqB,KAAdnC,EAAMmC,IAMRkC,IAAAA,OAACC,MAADD,IAAA,CAAQrE,EAAOC,EAAUC,GAAAqE,OAAkB3F,IALlD,IAAAgF,MAAA,iCAC4B1D,2JAAA,EAOjBsE,EAAG,CACvBC,MAAOJ,IAAAA,OAAiBb,WACxBrB,IAAK8B,GC7IPS,EAAA,8FAAAC,EAAA,sBAAAC,EA4BmB,IAAAC,IACnB,IAA8BC,EACyBC,EAgCvD,MAAMC,EAA4C,SAWjDhF,GAAA,IAX8EiF,GAC7EhF,EAAU,MAAAwE,MACVvE,EAAKK,MACLU,EAAKC,gBACLQ,EAAepB,UACf+D,EACAa,MAAOC,EAAWC,YAClBC,EAAWC,OACX/F,EAAMgG,QACNC,GAEDxF,EADIyF,EAEHjD,EAAAxC,EAAA0E,GAAA,MAAMtE,MAAEsF,EAAKrF,OAAEsF,EAAM5D,OAAE6D,GAAW1F,EAAA2F,EAK9B9F,EAAgB2F,EAAOC,EAAQC,IAHjCrF,MAAOuF,EACPxF,UAAWyF,GACRF,EAAAG,EAAAxD,EAAAqD,EAAAlB,GAECsB,GAAO9F,EAAAA,EAAAA,UAAA+F,GACIpF,EAAAA,EAAAA,UAAQ,IAAMqF,KAAKC,UAAUlG,EAAMmG,SAAS,CAACnG,EAAMmG,SAGhElB,IACFd,EAAYc,GAGd,MAAWmB,EAAA,SLxCXtG,EACAC,EACAC,GAEA,IAAStB,EAAG,GAWZ,MAVe,cAAXoB,IACFpB,EACE,+CAACsB,EAASD,EAAS,iBAIR,gBAAXD,IACFpB,EAAA,0BAAkCqB,mIAAuIC,eAAoBD,2IAGxLrB,CACT,CKwBa,CAAYgH,EAAQF,EAAOC,GA+HtC,OA7HA5E,EAAAA,EAAAA,YAAU,KACH+D,IACHA,EAA6B,8BAAyByB,MACpDC,IAAA,IAAGC,oBAAAzG,EAAqB0G,qBAAAzG,GAAAuG,EAAA,OACtBzB,EAAc/E,EAEP,CACLyG,oBAAAzG,EACA0G,qBAAAzG,EAAA,KAQR,MAAMD,EAAWiG,EAAKU,QAAQC,cACH,2BAE3B,GAAI5G,GAAYL,IAkCd,OAjCIK,EAAS6G,UAAA,MAEXxB,GAAAA,EAAc,CACZyB,WAAA,IAAW,MAEbvH,GAAAA,EAAS,CACPuH,WAAA,IAIFC,YAAW,KACT/G,EAASgH,gBAAgB,2BACxB,KAEQ,MAAX3B,GAAAA,EAAc,CACZyB,WAAA,IAGF9G,EAASiH,iBAAuB,QAAE,SAAAhH,IAChCD,EAASkH,oBAAA,OAA4BjH,GAE/B,MAANV,GAAAA,EAAS,CACPuH,WAAA,IAGFC,YAAW,KACT/G,EAASgH,gBAAgB,wBAAuB,GAC/C,EACL,UAGFpC,EAAWuC,IAAIjB,GAKjB,GAAInB,GAAeH,EAAWwC,IAAIlB,GAChC,OAGF,IAAIjG,EACArB,EAiCJ,OAhCAkG,EAA2ByB,MACzBc,IAAwB,IAArBZ,oBAAAzG,EAAqB0G,qBAAAvG,GAAAkH,EACjBpB,EAAKU,UAIVV,EAAKU,QAAQW,UAAYtH,EAAAS,EAAA,CACvB8G,WAAA,EACAC,SAAU5C,EAAWwC,IAAIlB,GACzBzB,MAAAvE,GACGuF,IAGAb,EAAWwC,IAAIlB,KAClBjG,EAAiBwH,uBAAsB,KACjCxB,EAAKU,UACP/H,EAAkBuB,EAChB8F,EAAKU,QACLT,EACAtB,EACA3D,EACAoE,EACA9F,EACAiG,GAEH,KAEJ,IAKE,KACDvF,GACFyH,qBAAqBzH,GAEnBrB,GACFA,GACD,CACH,GACC,CAACsB,KAGJc,EAAAA,EAAAA,kBAAgB,KACV4D,EAAWwC,IAAIlB,IAAanB,IAC9BkB,EAAKU,QAAQW,UAAYvC,EACvBtE,EAAA,CAAA8G,UAAW3C,EAAWwC,IAAIlB,GAC1BsB,SAAU5C,EAAWwC,IAAIlB,GACzBzB,MAAAvE,GACGuF,IAAA,MAILJ,GAAAA,EAAc,CACZyB,WAAA,IAAW,MAEbvH,GAAAA,EAAS,CACPuH,WAAA,IAEH,GACA,CAAC5G,KAGGtB,EAAAA,EAAAA,eAAcqB,EAAAQ,EAAA,GAChBuF,EAAY,CACfzF,MAAKE,EAAA,GACAqF,EACA7E,EACH,CAAAC,gBAAAQ,IAEFpB,UAAW,GAAGyF,IAAS1B,EAAY,IAAIA,IAAA,KACvCsD,IAAK1B,EACL2B,wBAAyB,CACvBC,OAAQvB,GAEVwB,0BAAA,IAEJ,EAEwBC,GAAwC7H,EAAAA,EAAAA,OAC9D,SAAqBF,GACnB,OAAKA,EAAMyE,OAcJ7F,EAAAA,EAAAA,eAAcoG,EAAqBhF,GARzC,IASH,IAGF+H,EAAYxE,UAAYiB,EACxBuD,EAAYtE,YAAc,cC5P1B,MAAAuE,EAAA,mPAsBgB,SAAAC,EACdhI,GAEA,OAAgB,SAuBfC,GAAA,IAvB2BmC,IAC1BzD,EACAsJ,YAAa/H,EAASgI,QACtBrH,GAmBGZ,EAAAa,EAEHyB,EAAAtC,EAAA8H,GAIA,OAJIlH,GACFsH,QAAQC,KAAKvH,GAGXX,EACKH,EAAAA,cAACC,EAAYQ,EAAA,CAAAgE,MAAOtE,GAAeY,KAE5CqH,QAAQC,KAAA,mBAAyBzJ,GAOnC,MACF,CAEA,MAAiB0J,EACfL,GFvDA,SAAoBhI,GAAA,IAACgF,GACnB/E,EAAA,MAAUI,UACV1B,EACAsG,MAAO/E,EAAWI,MAClBO,EAAK2D,MACL1D,EAAKL,QACLM,EAAgB,OAAAuH,aAChBtH,EAAYuH,SACZ9G,EAAQR,gBACRmD,EAAe7C,UACf2D,EAAS1D,eACT4D,GAAApF,EACGV,EAAKiD,EAAAvC,EAAA6D,GAER,IAAK/C,EAEH,OADAqH,QAAQC,KAAK,4CACN,KAGLlI,IACFvB,EAAYuB,GAGduB,EAAAjB,EAAA,CACEe,UAAA2D,EACA1D,eAAA4D,EACAnE,gBAAAmD,GACG3C,GAGL,MAAMtB,MACJoF,EAAKnF,OACLoF,EAAM1D,OACN2D,EAAMW,OACNV,EAAM8C,YACN7C,EACA1E,gBAAiB2E,GACf9E,EAMA+E,EAAA/F,EAAgByF,EAAOC,EAAQC,IAHjCnF,MAAOwF,EACPzF,UAAW0F,GACRF,EAAAG,EAAAzD,EAAAsD,EAAA/B,GAGCmC,EAA4C,CAChDnD,cAAA,EACAC,QAAS,IAoBX,OAlBI2C,EAAO5C,WACTmD,EAAcnD,SAAQtC,EAAA,GACjBkF,EAAO5C,SAAA,CACVH,OAAQ+C,EAAO5C,SAASH,OACpBoB,EAAe2B,EAAO5C,SAASH,aAAA,KAKnC+C,EAAO3C,UACTkD,EAAclD,QAAU2C,EAAO3C,QAAQnF,KAAImC,GAAAS,EAAA,GAEpCT,EAAM,CACT4C,OAAQoB,EAAehE,EAAO4C,aAAA5C,EAAAA,cAMlCE,EAEKO,EAAA,GAAAwF,EAAA,CACH1F,MAAKE,EAAA,GACAsF,EACAjF,EAAK,CACRI,gBAAAmD,IAEF/D,UAAW,GAAG0F,IAASpH,EAAY,IAAIA,IAAA,OAEzCoB,EAAAA,cAACsC,EAAc,CAAAP,OAAQ2D,EAAQtF,MAAOoF,EAAOnF,OAAQoF,GACnDzF,EAAAA,cAAC2D,EAAWlD,EAAA,GACNI,EACF+E,GAAA,EAEAF,EACAF,EACAC,EACAI,EACAV,EACAE,KAIJrF,EAAAA,cAAC6D,EACuBpD,EAAA,4BACtBH,UAAWW,GACN1B,EAKDiB,EACU,UAAZQ,GAAA,EAEAkF,EACAlF,EACAU,MAKV,IErDuBgH,EAAgC,SACvD1I,EACAC,GAAA,QAAA0I,EAAAxE,UAAAlG,OACGiC,EAAA,IAAA1C,MAAAmL,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA1I,EAAA0I,EAAA,GAAAzE,UAAAyE,GAAA,MAG2B,cAA5B5I,EAAM+B,QACQ,UAAb9B,GAAA,WAAwBA,IACzBD,EAAMC,GAAAoE,IAAAA,OAMSC,MANTD,IAAA,CAMgBrE,EAAOC,GAAAsE,OAAarE,IAJnC,IAAS0D,MACd,IAAI3D,MAAaD,EAAMC,iDAAA,EAMX4I,EAAG,IAAIhE,IAAI,CAAQ,QAAa,YAAe,gBAEpDiE,EAAY,CACvBzG,IAAKgC,IAAAA,OAAiBb,WACtBrB,IAAK8B,EACL7D,MAAOsI,EACPrI,OAAQqI,EACRzF,MAAOoB,IAAAA,OACPtC,OAAS/B,IACP,YAAIA,EAAM+B,SAGN8G,EAAazB,IAAIpH,EAAM+B,QAI3B,OAAW,IAAA6B,MACT,iBAAiB5D,EAAM+B,2HAA0H,GAKvJuG,EAAY7E,YAAc,cAC1B6E,EAAY/E,UAAYuF,EC7FlB,MAAAC,EACJd,EAAgBF,GAElBgB,EAAYtF,YAAc,cAC1BsF,EAAYxF,UAAYuF,C,4gDCdT,SAASE,IACtB,MAAM,EAACC,EAAc,EAACC,IAAoBC,EAAAA,EAAAA,WAAS,IAC7C,EAACC,EAAe,EAACC,IAAqBF,EAAAA,EAAAA,YAEtCG,EAAiBA,KACrBJ,GAAiB,KACPD,GACR,EAsCEM,EAAyBA,KAC7B,IAAIC,EAA0B,EAC1BC,EAAuB,EAC3B,OACEC,EAAAA,cAAA,OAAKpJ,UAAU,iCACZqJ,EAAc9L,KAAK+L,IAClBJ,IAEEE,EAAAA,cAAA,OAAKpJ,UAAU,YAAY+C,IAAKmG,GAC9BE,EAAAA,cAAA,OAAKpJ,UAAU,qBAEboJ,EAAAA,cAAA,KAAGpJ,UAAU,oBAAoBsJ,EAAKC,QAExCH,EAAAA,cAAA,MAAIpJ,UAAU,mBACXsJ,EAAKE,MAAMjM,KAAKkM,IACfN,IAEEC,EAAAA,cAAA,UACEA,EAAAA,cAACM,EAAAA,GAAI,CACHC,GAAIF,EAAKG,MACT5J,UAAU,uBACV+C,IAAKoG,GAEJM,EAAKF,gBASlB,EAIV,OACEH,EAAAA,cAAA,cACEA,EAAAA,cAAA,OAAKpJ,UAAU,UACboJ,EAAAA,cAAA,OAAKpJ,UAAU,qBACboJ,EAAAA,cAAA,OAAKpJ,UAAU,sBACboJ,EAAAA,cAACM,EAAAA,GAAI,CAACC,GAAG,KACPP,EAAAA,cAAA,OACEtJ,MAAM,MACNC,OAAO,KACP8J,QAAQ,aACRC,KAAK,OACLC,MAAM,8BAENX,EAAAA,cAAA,KAAGY,GAAG,SACJZ,EAAAA,cAAA,QACEY,GAAG,SACH5I,EAAE,oDACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,iRACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,0KACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,ieACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,geACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,ulBACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,gTACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,gcACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,kKACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,YACH5I,EAAE,oHACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,YACH5I,EAAE,8LACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,YACH5I,EAAE,iNACF0I,KAAK,cAOfV,EAAAA,cAAA,OAAKpJ,UAAU,gBACboJ,EAAAA,cAAA,OAAKpJ,UAAU,sBACboJ,EAAAA,cAAA,QACEpJ,UAAU,gCACViK,QAASjB,GACV,aAGDI,EAAAA,cAACM,EAAAA,GAAI,CAAC1J,UAAU,4BAA4B2J,GAAG,UAAS,WAGxDP,EAAAA,cAACM,EAAAA,GAAI,CAAC1J,UAAU,4BAA4B2J,GAAG,kBAAiB,aAGhEP,EAAAA,cAAA,QACEpJ,UAAU,gCACViK,QAASjB,GACV,cAIHI,EAAAA,cAAA,OAAKpJ,UAAU,oBACboJ,EAAAA,cAAA,OAAKpJ,UAAU,gBACboJ,EAAAA,cAAA,OACEW,MAAM,6BACNjK,MAAM,KACNC,OAAO,KACP8J,QAAQ,YACRC,KAAK,QAELV,EAAAA,cAAA,QACEc,SAAS,UACTC,SAAS,UACT/I,EAAE,29BACF0I,KAAK,UAEPV,EAAAA,cAAA,QACEc,SAAS,UACTC,SAAS,UACT/I,EAAE,odACF0I,KAAK,WAGTV,EAAAA,cAAA,KACEgB,KAAK,6CACLpK,UAAU,sBACX,WAKHoJ,EAAAA,cAAA,OAAKpJ,UAAU,mBACboJ,EAAAA,cAACM,EAAAA,GAAI,CAAC1J,UAAU,+BAA+B2J,GAAG,UAAS,gBASrEP,EAAAA,cAAA,WAAK,IAAET,EAAgBS,EAAAA,cAACH,EAAsB,MAAM,MAG1D,CC/Ne,SAASoB,IACtB,OACEjB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKpJ,UAAU,cACfoJ,EAAAA,cAAA,OAAKpJ,UAAU,UACboJ,EAAAA,cAAA,OAAKpJ,UAAU,qBACboJ,EAAAA,cAAA,OAAKpJ,UAAU,gBACboJ,EAAAA,cAAA,OAAKpJ,UAAU,eACboJ,EAAAA,cAAA,OACEpJ,UAAU,eACVF,MAAM,MACNC,OAAO,KACP8J,QAAQ,aACRC,KAAK,OACLC,MAAM,8BAENX,EAAAA,cAAA,KAAGY,GAAG,SACJZ,EAAAA,cAAA,QACEY,GAAG,SACH5I,EAAE,oDACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,iRACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,0KACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,ieACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,geACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,ulBACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,gTACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,gcACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,WACH5I,EAAE,kKACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,YACH5I,EAAE,oHACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,YACH5I,EAAE,8LACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEY,GAAG,YACH5I,EAAE,iNACF0I,KAAK,YAIXV,EAAAA,cAAA,OAAKpJ,UAAU,qBACboJ,EAAAA,cAAA,SAAG,iBACHA,EAAAA,cAAA,OAAKpJ,UAAU,wBACboJ,EAAAA,cAAA,KAAGgB,KAAK,wCACNhB,EAAAA,cAAA,OACEtJ,MAAM,KACNC,OAAO,KACP8J,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENX,EAAAA,cAAA,KAAGkB,SAAS,0BACVlB,EAAAA,cAAA,QACEhI,EAAE,6bACF0I,KAAK,aAGTV,EAAAA,cAAA,YACEA,EAAAA,cAAA,YAAUY,GAAG,oBACXZ,EAAAA,cAAA,QACEtJ,MAAM,KACNC,OAAO,KACP+J,KAAK,QACLS,UAAU,qCAMpBnB,EAAAA,cAAA,KAAGgB,KAAK,+CACNhB,EAAAA,cAAA,OACEtJ,MAAM,KACNC,OAAO,KACP8J,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENX,EAAAA,cAAA,KAAGkB,SAAS,0BACVlB,EAAAA,cAAA,QACEhI,EAAE,+wBACF0I,KAAK,aAGTV,EAAAA,cAAA,YACEA,EAAAA,cAAA,YAAUY,GAAG,oBACXZ,EAAAA,cAAA,QACEtJ,MAAM,KACNC,OAAO,SACP+J,KAAK,QACLS,UAAU,qCAMpBnB,EAAAA,cAAA,KAAGgB,KAAK,sCACNhB,EAAAA,cAAA,OACEtJ,MAAM,KACNC,OAAO,KACP8J,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENX,EAAAA,cAAA,KAAGkB,SAAS,0BACVlB,EAAAA,cAAA,QACEhI,EAAE,upCACF0I,KAAK,aAGTV,EAAAA,cAAA,YACEA,EAAAA,cAAA,YAAUY,GAAG,oBACXZ,EAAAA,cAAA,QACEtJ,MAAM,KACNC,OAAO,SACP+J,KAAK,QACLS,UAAU,wCAU1BnB,EAAAA,cAAA,OAAKpJ,UAAU,eACboJ,EAAAA,cAAA,KAAGpJ,UAAU,sBAAqB,aAClCoJ,EAAAA,cAAA,OAAKpJ,UAAU,qBACboJ,EAAAA,cAACM,EAAAA,GAAI,CAACC,GAAG,SAAQ,QACjBP,EAAAA,cAACM,EAAAA,GAAI,CAACC,GAAG,iBAAgB,gBACzBP,EAAAA,cAAA,KAAGgB,KAAK,gCAA+B,mBAG3ChB,EAAAA,cAAA,OAAKpJ,UAAU,eACboJ,EAAAA,cAAA,KAAGpJ,UAAU,sBAAqB,YAClCoJ,EAAAA,cAAA,OAAKpJ,UAAU,qBACboJ,EAAAA,cAACM,EAAAA,GAAI,CAACC,GAAG,WAAU,SACnBP,EAAAA,cAACM,EAAAA,GAAI,CAACC,GAAG,QAAO,mBAItBP,EAAAA,cAAA,OAAKpJ,UAAU,qBACboJ,EAAAA,cAACM,EAAAA,GAAI,CAACC,GAAG,IAAI3J,UAAU,oBAAmB,MAG1CoJ,EAAAA,cAACM,EAAAA,GAAI,CAACC,GAAG,IAAI3J,UAAU,oBAAmB,MAG1CoJ,EAAAA,cAACM,EAAAA,GAAI,CAACC,GAAG,IAAI3J,UAAU,oBAAmB,SAQtD,CCjMe,SAASwK,EAAMC,GAAuB,IAAtB,SAAExI,GAAiBwI,EAChD,OACErB,EAAAA,cAAA,OAAKpJ,UAAU,UACboJ,EAAAA,cAACV,EAAM,MACPU,EAAAA,cAAA,OAAKpJ,UAAU,WAAWiC,GAC1BmH,EAAAA,cAACiB,EAAM,MAGb,CCdO,MAAMK,EACXtB,EAAAA,cAAA,OAAKpJ,UAAU,uBACboJ,EAAAA,cAACM,EAAAA,GAAI,CAACC,GAAG,SAAS3J,UAAU,iBAAgB,WAG5CoJ,EAAAA,cAACM,EAAAA,GAAI,CAACC,GAAG,QAAQ3J,UAAU,gBAAe,iBCGjC2K,EAAwCF,IAK9C,IAL+C,OACpDG,EAAM,aACNC,EAAY,WACZC,EAAU,WACVC,GACDN,EACC,OACErB,EAAAA,cAAA,OAAKpJ,UAAU,eACboJ,EAAAA,cAAA,KAAGpJ,UAAU,0BAA0B+K,GACvC3B,EAAAA,cAAA,OAAKpJ,UAAU,yBACboJ,EAAAA,cAAA,OACEpJ,UAAU,sBACV+B,IAAK6I,EACL/I,IAAI,mBAENuH,EAAAA,cAAA,KAAGpJ,UAAU,mCAAmC6K,GAChDzB,EAAAA,cAAA,OACEpJ,UAAU,2BACV+B,IAAK+I,EACLjJ,IAAI,mBAGJ,ECnBJmJ,EAAgBC,GAElB7B,EAAAA,cAAA,OAAKpJ,UAAU,0BACboJ,EAAAA,cAAA,OACEtJ,MAAM,KACNC,OAAO,KACP8J,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENX,EAAAA,cAAA,QACEhI,EAAE,6EACF0I,KAAK,aAGTV,EAAAA,cAAA,KAAGpJ,UAAU,0BAA0BiL,EAAMC,OAI7CC,EAAaA,KACjB,MAAMC,EACJhC,EAAAA,cAAA,OACEtJ,MAAM,KACNC,OAAO,KACP8J,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENX,EAAAA,cAAA,KAAG,YAAU,0BACXA,EAAAA,cAAA,QACEhI,EAAE,oaACF0I,KAAK,UACLuB,OAAO,UACP,eAAa,YACb,iBAAe,QACf,kBAAgB,WAGpBjC,EAAAA,cAAA,YACEA,EAAAA,cAAA,YAAUY,GAAG,oBACXZ,EAAAA,cAAA,QACEtJ,MAAM,KACNC,OAAO,KACP+J,KAAK,QACLS,UAAU,mCAMpB,OACEnB,EAAAA,cAAA,OAAKpJ,UAAU,gBACZoL,EACAA,EACAA,EACAA,EACAA,EACG,EAIK,SAASE,EAAIb,GAAgB,IAAf,KAAEnB,GAAWmB,EACxC,OACErB,EAAAA,cAACoB,EAAM,KACLpB,EAAAA,cAAA,OAAKpJ,UAAU,WACboJ,EAAAA,cAAA,OAAKpJ,UAAU,eACboJ,EAAAA,cAAA,MAAIpJ,UAAU,SAAQ,0CACtBoJ,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,mEAGzBoJ,EAAAA,cAAA,OAAKpJ,UAAU,yBACboJ,EAAAA,cAAC4B,EAAY,CAACE,KAAK,oBACnB9B,EAAAA,cAAC4B,EAAY,CAACE,KAAK,iBACnB9B,EAAAA,cAAC4B,EAAY,CAACE,KAAK,eACnB9B,EAAAA,cAAC4B,EAAY,CAACE,KAAK,uBAErB9B,EAAAA,cAAA,OAAKpJ,UAAU,oBACboJ,EAAAA,cAACM,EAAAA,GAAI,CAAC1J,UAAU,gBAAgBgK,GAAG,eAAeL,GAAG,UAAS,oBAMlEP,EAAAA,cAAA,OAAKpJ,UAAU,gBACboJ,EAAAA,cAACmC,EAAAA,EAAW,CACVvL,UAAU,wBACV+B,IAAI,qDACJF,IAAI,kBACJJ,OAAO,QACP3B,MAAO,KACPC,OAAQ,IAAI6H,YAAA4D,EAAA,SAIhBpC,EAAAA,cAAA,OAAKpJ,UAAU,4BACboJ,EAAAA,cAAA,OAAKpJ,UAAU,YAGjBoJ,EAAAA,cAAA,OAAKpJ,UAAU,+BACboJ,EAAAA,cAAA,OAAKpJ,UAAU,8BACboJ,EAAAA,cAAA,MAAIpJ,UAAU,sCAAqC,+DAGnDoJ,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,oIAO7BoJ,EAAAA,cAAA,OAAKpJ,UAAU,oBACboJ,EAAAA,cAAA,OAAKpJ,UAAU,iCACfoJ,EAAAA,cAAA,OAAKpJ,UAAU,YAGjBoJ,EAAAA,cAAA,OAAKpJ,UAAU,YACboJ,EAAAA,cAAA,OAAKpJ,UAAU,yBACboJ,EAAAA,cAAA,MAAIpJ,UAAU,aAAY,0DAG1BoJ,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,oJAO3BoJ,EAAAA,cAAA,OAAKpJ,UAAU,mBACboJ,EAAAA,cAAA,OAAKpJ,UAAU,WACboJ,EAAAA,cAAA,OAAKpJ,UAAU,0BACboJ,EAAAA,cAACmC,EAAAA,EAAW,CACVxJ,IAAI,gDACJF,IAAI,2BAA0B+F,YAAA4D,EAAA,SAGlCpC,EAAAA,cAAA,OAAKpJ,UAAU,2BACboJ,EAAAA,cAAA,MAAIpJ,UAAU,aAAY,4BAC1BoJ,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,yKAKxB0K,IAGLtB,EAAAA,cAAA,OAAKpJ,UAAU,oBACboJ,EAAAA,cAAA,OAAKpJ,UAAU,mCACboJ,EAAAA,cAACmC,EAAAA,EAAW,CACVxJ,IAAI,oDACJF,IAAI,aAAY+F,YAAA4D,EAAA,SAGpBpC,EAAAA,cAAA,OAAKpJ,UAAU,oCACboJ,EAAAA,cAAA,MAAIpJ,UAAU,aAAY,6BAC1BoJ,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,0HAKxB0K,IAGLtB,EAAAA,cAAA,OAAKpJ,UAAU,WACboJ,EAAAA,cAAA,OAAKpJ,UAAU,0BACboJ,EAAAA,cAACmC,EAAAA,EAAW,CACVxJ,IAAI,iDACJF,IAAI,UAAS+F,YAAA4D,EAAA,SAGjBpC,EAAAA,cAAA,OAAKpJ,UAAU,2BACboJ,EAAAA,cAAA,MAAIpJ,UAAU,aAAY,4BAC1BoJ,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,gLAKxB0K,IAGLtB,EAAAA,cAAA,OAAKpJ,UAAU,oBACboJ,EAAAA,cAAA,OAAKpJ,UAAU,mCACboJ,EAAAA,cAACmC,EAAAA,EAAW,CACVxJ,IAAI,mDACJF,IAAI,YAAW+F,YAAA4D,EAAA,SAGnBpC,EAAAA,cAAA,OAAKpJ,UAAU,oCACboJ,EAAAA,cAAA,MAAIpJ,UAAU,aAAY,+BAC1BoJ,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,sJAKxB0K,MAMTtB,EAAAA,cAAA,OAAKpJ,UAAU,SACboJ,EAAAA,cAAA,OAAKpJ,UAAU,aACboJ,EAAAA,cAAA,MAAIpJ,UAAU,SAAQ,iDAGtBoJ,EAAAA,cAAA,OAAKpJ,UAAU,kBACboJ,EAAAA,cAAA,OAAKpJ,UAAU,kBACboJ,EAAAA,cAAA,KAAGpJ,UAAU,SAAQ,QACrBoJ,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,uBACzBoJ,EAAAA,cAAA,OAAKpJ,UAAU,eAEjBoJ,EAAAA,cAAA,OAAKpJ,UAAU,kBACboJ,EAAAA,cAAA,KAAGpJ,UAAU,SAAQ,OACrBoJ,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,2BACzBoJ,EAAAA,cAAA,OAAKpJ,UAAU,eAEjBoJ,EAAAA,cAAA,OAAKpJ,UAAU,kBACboJ,EAAAA,cAAA,KAAGpJ,UAAU,SAAQ,MACrBoJ,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,iCACzBoJ,EAAAA,cAAA,OAAKpJ,UAAU,eAEjBoJ,EAAAA,cAAA,OAAKpJ,UAAU,kBACboJ,EAAAA,cAAA,KAAGpJ,UAAU,SAAQ,SACrBoJ,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,qCACzBoJ,EAAAA,cAAA,OAAKpJ,UAAU,kBAMvBoJ,EAAAA,cAAA,OAAKpJ,UAAU,WACboJ,EAAAA,cAAA,OAAKpJ,UAAU,sBACboJ,EAAAA,cAAA,MAAIpJ,UAAU,aAAY,0BAE5BoJ,EAAAA,cAAA,OAAKpJ,UAAU,kCACboJ,EAAAA,cAAA,OAAKpJ,UAAU,6BAKfoJ,EAAAA,cAACuB,EAAU,CACTC,OAAO,wDACPC,aAAa,kCAEbC,WAAW,sDACXC,WAAW,6NAKjB3B,EAAAA,cAAA,OAAKpJ,UAAU,UACboJ,EAAAA,cAAA,OAAKpJ,UAAU,qBACboJ,EAAAA,cAAA,OAAKpJ,UAAU,SACboJ,EAAAA,cAACmC,EAAAA,EAAW,CACVxJ,IAAI,0CACJF,IAAI,KACJ+C,MAAM,cAAagD,YAAA4D,EAAA,QAErBpC,EAAAA,cAAC+B,EAAU,MAEX/B,EAAAA,cAAA,KAAGpJ,UAAU,gBAAe,QAG9BoJ,EAAAA,cAAA,OAAKpJ,UAAU,SACboJ,EAAAA,cAAA,OACEW,MAAM,6BACNjK,MAAM,MACNC,OAAO,MACP8J,QAAQ,cACRC,KAAK,QAELV,EAAAA,cAAA,QACEhI,EAAE,4EACF0I,KAAK,UAEPV,EAAAA,cAAA,QACEhI,EAAE,yEACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEhI,EAAE,6NACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEhI,EAAE,ovCACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEhI,EAAE,6meACF0I,KAAK,YAEPV,EAAAA,cAAA,QACEhI,EAAE,ozKACF0I,KAAK,UAEPV,EAAAA,cAAA,QACEhI,EAAE,whLACF0I,KAAK,cAKXV,EAAAA,cAAA,OAAKpJ,UAAU,SACboJ,EAAAA,cAACmC,EAAAA,EAAW,CACVxJ,IAAI,gDACJF,IAAI,WACJ+C,MAAM,cAAagD,YAAA4D,EAAA,QAErBpC,EAAAA,cAAC+B,EAAU,MACX/B,EAAAA,cAAA,KAAGpJ,UAAU,gBAAe,UAKlCoJ,EAAAA,cAAA,OAAKpJ,UAAU,8BACboJ,EAAAA,cAAA,OAAKpJ,UAAU,+BAGjBoJ,EAAAA,cAAA,OAAKpJ,UAAU,gBACboJ,EAAAA,cAAA,OAAKpJ,UAAU,2BACboJ,EAAAA,cAAA,MAAIpJ,UAAU,YAAW,oCACzBoJ,EAAAA,cAAA,OAAKpJ,UAAU,SACboJ,EAAAA,cAAA,OAAKpJ,UAAU,wBACboJ,EAAAA,cAAA,OACEW,MAAM,6BACNjK,MAAM,KACNC,OAAO,KACP8J,QAAQ,YACRC,KAAK,QAELV,EAAAA,cAAA,QACEhI,EAAE,+iCACF0I,KAAK,aAGTV,EAAAA,cAAA,KAAGpJ,UAAU,aACXoJ,EAAAA,cAAA,YAAM,gCAERA,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,qPAQ3BoJ,EAAAA,cAAA,OAAKpJ,UAAU,wBACboJ,EAAAA,cAAA,OACEW,MAAM,6BACNjK,MAAM,KACNC,OAAO,KACP8J,QAAQ,YACRC,KAAK,QAELV,EAAAA,cAAA,QACEhI,EAAE,wlBACF0I,KAAK,aAGTV,EAAAA,cAAA,KAAGpJ,UAAU,aACXoJ,EAAAA,cAAA,YAAM,kBAERA,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,sHAEmC,MAI9DoJ,EAAAA,cAAA,OAAKpJ,UAAU,wBACboJ,EAAAA,cAAA,OACEW,MAAM,6BACNjK,MAAM,KACNC,OAAO,KACP8J,QAAQ,YACRC,KAAK,QAELV,EAAAA,cAAA,QACEhI,EAAE,+5BACF0I,KAAK,aAGTV,EAAAA,cAAA,KAAGpJ,UAAU,aACXoJ,EAAAA,cAAA,YAAM,8BAERA,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,uGASjCoJ,EAAAA,cAAA,OAAKpJ,UAAU,YACboJ,EAAAA,cAAA,OAAKpJ,UAAU,uBACboJ,EAAAA,cAAA,OAAKpJ,UAAU,yBACboJ,EAAAA,cAAA,MAAIpJ,UAAU,YAAW,kDAGzBoJ,EAAAA,cAAA,KAAGpJ,UAAU,aAAY,gGAK3BoJ,EAAAA,cAAA,OAAKpJ,UAAU,4BACboJ,EAAAA,cAAA,OAAKpJ,UAAU,QACboJ,EAAAA,cAAA,SACEtG,KAAK,QACLqF,YAAY,2BACZnI,UAAU,gBAEZoJ,EAAAA,cAACM,EAAAA,GAAI,CAACC,GAAG,SAAS3J,UAAU,8BAA6B,oBAUzE,C","sources":["webpack://inappstory/./node_modules/camelcase/index.js","webpack://inappstory/../src/image-utils.ts","webpack://inappstory/../src/components/hooks.ts","webpack://inappstory/../src/components/layout-wrapper.tsx","webpack://inappstory/../src/components/picture.tsx","webpack://inappstory/../src/components/placeholder.tsx","webpack://inappstory/../src/components/main-image.tsx","webpack://inappstory/../src/components/gatsby-image.server.tsx","webpack://inappstory/../src/components/gatsby-image.browser.tsx","webpack://inappstory/../src/components/static-image.server.tsx","webpack://inappstory/../src/components/static-image.tsx","webpack://inappstory/./src/components/essential/navbar.tsx","webpack://inappstory/./src/components/essential/footer.tsx","webpack://inappstory/./src/components/essential/layout.tsx","webpack://inappstory/./src/components/essential/request-demo-button.tsx","webpack://inappstory/./src/components/index/review-card.tsx","webpack://inappstory/./src/pages/index.tsx"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React, { useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport solutionsData from \"../../static-data/nav/navSolutionLinks.json\";\nimport resourcesData from \"../../static-data/nav/navResourcesLinks.json\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nexport default function Navbar() {\n  const [dropdownShown, setDropdownShown] = useState(false);\n  const [activeDropDown, setActiveDropdown] = useState();\n\n  const handleDropdown = () => {\n    setDropdownShown(() => {\n      return !dropdownShown;\n    });\n  };\n\n  //modal dropdown window components\n  const DropdownModalResources = () => {\n    let navBlockCounter: number = 1;\n    let linksCounter: number = 1;\n    return (\n      <div className=\"dropdown__container solutions\">\n        {resourcesData.map((data: any) => {\n          navBlockCounter++;\n          return (\n            <div className=\"nav-block\" key={navBlockCounter}>\n              <div className=\"nav-block__header\">\n                <b className=\"nav-block__title\">{data.title}</b>\n              </div>\n              <ul className=\"nav-block__list\">\n                {data.links.map((link: any) => {\n                  linksCounter++;\n                  return (\n                    <li>\n                      <Link\n                        to={link.route}\n                        className=\"nav-block__list_item\"\n                        key={linksCounter}\n                      >\n                        {link.title}\n                      </Link>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n  const DropdownModalSolutions = () => {\n    let navBlockCounter: number = 1;\n    let linksCounter: number = 1;\n    return (\n      <div className=\"dropdown__container resources\">\n        {solutionsData.map((data: any) => {\n          navBlockCounter++;\n          return (\n            <div className=\"nav-block\" key={navBlockCounter}>\n              <div className=\"nav-block__header\">\n                {/* <GatsbyImage logo/> */}\n                <b className=\"nav-block__title\">{data.title}</b>\n              </div>\n              <ul className=\"nav-block__list\">\n                {data.links.map((link: any) => {\n                  linksCounter++;\n                  return (\n                    <li>\n                      <Link\n                        to={link.route}\n                        className=\"nav-block__list_item\"\n                        key={linksCounter}\n                      >\n                        {link.title}\n                      </Link>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <header>\n      <div className=\"Navbar\">\n        <div className=\"Navbar__container\">\n          <div className=\"Navbar__brand-name\">\n            <Link to=\"/\">\n              <svg\n                width=\"202\"\n                height=\"41\"\n                viewBox=\"0 0 202 41\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <g id=\"Frame\">\n                  <path\n                    id=\"Vector\"\n                    d=\"M45.0977 30.1577H51.4025V10.3846H45.0977V30.1577Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_2\"\n                    d=\"M54.6016 30.157H60.0254V22.1647C60.0254 20.4502 60.8238 19.6481 62.1728 19.6481C63.4669 19.6481 63.9901 20.3949 63.9901 21.8605V30.157H69.4139V20.6437C69.4139 17.0487 67.5142 15.3064 64.7884 15.3064C62.3657 15.3064 60.8238 16.4956 60.0254 18.0166V15.6936H54.6016V30.157Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_3\"\n                    d=\"M80.7001 15.4454L82.6273 22.6081H78.7452L80.7001 15.4454ZM70.8711 30.1577H76.6803L77.5613 26.8668H83.7837L84.6922 30.1577H91.3L85.1328 10.3846H77.0658L70.8711 30.1577Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_4\"\n                    d=\"M100.655 26.3682C99.0031 26.3682 98.1221 25.2344 98.1221 22.9943V22.7732C98.1221 20.5607 99.0307 19.344 100.628 19.344C102.252 19.344 103.188 20.4502 103.188 22.7732V22.9943C103.188 25.2067 102.279 26.3682 100.655 26.3682ZM92.8359 34.9689H98.2598V28.0829C98.9755 29.4933 100.517 30.5165 102.637 30.5165C105.914 30.5165 108.694 28.1105 108.694 23.0497V22.8284C108.694 17.7677 105.941 15.3064 102.665 15.3064C100.49 15.3064 99.0582 16.4402 98.2598 17.7953V15.6936H92.8359V34.9689Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_5\"\n                    d=\"M118.452 26.3682C116.8 26.3682 115.919 25.2344 115.919 22.9943V22.7732C115.919 20.5607 116.828 19.344 118.424 19.344C120.049 19.344 120.985 20.4502 120.985 22.7732V22.9943C120.985 25.2067 120.076 26.3682 118.452 26.3682ZM110.633 34.9689H116.057V28.0829C116.773 29.4933 118.314 30.5165 120.434 30.5165C123.711 30.5165 126.491 28.1105 126.491 23.0497V22.8284C126.491 17.7677 123.738 15.3064 120.462 15.3064C118.287 15.3064 116.855 16.4402 116.057 17.7953V15.6936H110.633V34.9689Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_6\"\n                    d=\"M136.335 30.5164C141.621 30.5164 144.484 27.4743 144.484 23.7963C144.484 19.3992 141.731 18.1271 136.775 17.6016C134.6 17.325 134.022 16.8826 134.022 15.9423C134.022 15.085 134.683 14.5043 135.977 14.5043C137.298 14.5043 137.987 15.1956 138.124 16.4125H143.906C143.576 12.0983 140.85 10.1072 135.977 10.1072C131.076 10.1072 128.103 12.762 128.103 16.4125C128.103 20.4777 130.03 22.1369 135.702 22.7731C137.821 23.0772 138.51 23.4091 138.51 24.4599C138.51 25.4278 137.794 26.0916 136.335 26.0916C134.297 26.0916 133.692 25.0684 133.581 23.824H127.662C127.8 28.2763 130.773 30.5164 136.335 30.5164Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_7\"\n                    d=\"M152.423 30.4904C153.607 30.4904 154.626 30.2692 155.286 30.0755V25.9827C154.818 26.1487 154.433 26.204 153.937 26.204C153.056 26.204 152.533 25.7891 152.533 24.7936V19.3456H155.286V15.6951H152.533V12.7361H147.109V15.6951H145.43V19.3456H147.109V25.3189C147.109 28.9417 149.036 30.4904 152.423 30.4904Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_8\"\n                    d=\"M164.66 30.5165C169.149 30.5165 172.673 27.7233 172.673 22.9667V22.7456C172.673 18.0996 169.176 15.3064 164.688 15.3064C160.146 15.3064 156.648 18.1825 156.648 22.8837V23.105C156.648 27.8616 160.173 30.5165 164.66 30.5165ZM164.688 26.5065C162.954 26.5065 162.127 25.2897 162.127 22.939V22.7179C162.127 20.4502 163.036 19.3164 164.688 19.3164C166.368 19.3164 167.166 20.5332 167.166 22.8009V22.9943C167.166 25.2897 166.34 26.5065 164.688 26.5065Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_9\"\n                    d=\"M174.57 30.1573H179.993V23.4926C179.993 21.4185 181.619 20.4229 184.619 20.5887V15.5004C182.472 15.4727 180.902 16.3853 179.993 18.6253V15.6939H174.57V30.1573Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_10\"\n                    d=\"M189.17 34.9704H194.318L202 15.6951H196.878L194.346 22.9129L191.62 15.6951H185.756L191.51 28.7204L189.17 34.9704Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_11\"\n                    d=\"M18.3209 38.794C28.4393 38.794 36.6419 30.4458 36.6419 20.1479C36.6419 9.84988 28.4393 1.50171 18.3209 1.50171C8.20256 1.50171 0 9.84988 0 20.1479C0 30.4458 8.20256 38.794 18.3209 38.794Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_12\"\n                    d=\"M6.57812 20.6266C15.2035 18.9364 16.5924 17.5795 18.3223 9.1521C20.0522 17.5795 21.441 18.9364 30.0664 20.6266C21.441 22.3169 20.0522 23.6739 18.3223 32.1012C16.5924 23.6739 15.2035 22.3169 6.57812 20.6266Z\"\n                    fill=\"white\"\n                  />\n                </g>\n              </svg>\n            </Link>\n          </div>\n\n          <div className=\"Navbar__list\">\n            <div className=\"Navbar__navigation\">\n              <span\n                className=\"Navbar__dropdown Navbar__item\"\n                onClick={handleDropdown}\n              >\n                Solutions\n              </span>\n              <Link className=\"Navbar__link Navbar__item\" to=\"/sales\">\n                Pricing\n              </Link>\n              <Link className=\"Navbar__link Navbar__item\" to=\"/success-cases\">\n                Successes\n              </Link>\n              <span\n                className=\"Navbar__dropdown Navbar__item\"\n                onClick={handleDropdown}\n              >\n                Resources\n              </span>\n            </div>\n            <div className=\"Navbar__controls\">\n              <div className=\"Navbar__auth\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"17\"\n                  height=\"17\"\n                  viewBox=\"0 0 17 17\"\n                  fill=\"none\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M5.44777 5.81519C5.43973 6.30177 5.52863 6.78509 5.70928 7.23697C5.88993 7.68885 6.15872 8.10026 6.49998 8.4472C6.84125 8.79415 7.24815 9.06969 7.69699 9.25778C8.14583 9.44587 8.62761 9.54274 9.11427 9.54274C9.60092 9.54274 10.0827 9.44587 10.5315 9.25778C10.9804 9.06969 11.3873 8.79415 11.7285 8.4472C12.0698 8.10026 12.3386 7.68885 12.5193 7.23697C12.6999 6.78509 12.7888 6.30177 12.7808 5.81519C12.7649 4.85326 12.3716 3.9361 11.6857 3.26146C10.9999 2.58682 10.0763 2.20874 9.11427 2.20874C8.1522 2.20874 7.22868 2.58682 6.5428 3.26146C5.85693 3.9361 5.46365 4.85326 5.44777 5.81519ZM11.4478 5.81519C11.4478 6.43407 11.2019 7.0276 10.7643 7.46522C10.3267 7.90284 9.73315 8.14869 9.11427 8.14869C8.49538 8.14869 7.90185 7.90284 7.46423 7.46522C7.02662 7.0276 6.78077 6.43407 6.78077 5.81519C6.78077 5.1963 7.02662 4.60277 7.46423 4.16515C7.90185 3.72754 8.49538 3.48169 9.11427 3.48169C9.73315 3.48169 10.3267 3.72754 10.7643 4.16515C11.2019 4.60277 11.4478 5.1963 11.4478 5.81519Z\"\n                    fill=\"black\"\n                  />\n                  <path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M14.4876 13.4102C13.0636 14.4472 4.97162 14.3372 3.69762 13.4102C2.42462 12.4822 6.32162 9.48022 9.09262 9.48022C11.8636 9.48022 15.9116 12.3732 14.4876 13.4102ZM9.09262 10.8142C10.0816 10.8142 11.5126 11.3642 12.5826 12.1372C12.7686 12.2712 12.9316 12.4052 13.0666 12.5292C12.2226 12.6932 10.6966 12.8232 9.04362 12.8132C7.52562 12.8042 6.08162 12.6772 5.23062 12.5332C5.37265 12.4034 5.52117 12.281 5.67562 12.1662C6.74062 11.3722 8.12662 10.8142 9.09262 10.8142Z\"\n                    fill=\"black\"\n                  />\n                </svg>\n                <a\n                  href=\"https://console.inappstory.com/auth/signin\"\n                  className=\"Navbar__auth-login\"\n                >\n                  Log in\n                </a>\n              </div>\n\n              <div className=\"Navbar__console\">\n                <Link className=\"Navbar__trynow button-filled\" to=\"/sales\">\n                  Try now\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div> {dropdownShown ? <DropdownModalSolutions /> : null}</div>\n    </header>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { SVG as Logo } from \"../../static/images/logo.svg\";\nimport { SVG as Facebook } from \"../../static/images/social-media/facebook.svg\";\nimport { SVG as Linkedin } from \"../../static/images/social-media/linkedin.svg\";\nimport { SVG as Twitter } from \"../../static/images/social-media/twitter.svg\";\n\nexport default function Footer() {\n  return (\n    <>\n      <div className=\"separator\"></div>\n      <div className=\"Footer\">\n        <div className=\"Footer__container\">\n          <div className=\"Footer__main\">\n            <div className=\"Footer__col\">\n              <svg\n                className=\"Footer__logo\"\n                width=\"202\"\n                height=\"41\"\n                viewBox=\"0 0 202 41\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <g id=\"Frame\">\n                  <path\n                    id=\"Vector\"\n                    d=\"M45.0977 30.1577H51.4025V10.3846H45.0977V30.1577Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_2\"\n                    d=\"M54.6016 30.157H60.0254V22.1647C60.0254 20.4502 60.8238 19.6481 62.1728 19.6481C63.4669 19.6481 63.9901 20.3949 63.9901 21.8605V30.157H69.4139V20.6437C69.4139 17.0487 67.5142 15.3064 64.7884 15.3064C62.3657 15.3064 60.8238 16.4956 60.0254 18.0166V15.6936H54.6016V30.157Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_3\"\n                    d=\"M80.7001 15.4454L82.6273 22.6081H78.7452L80.7001 15.4454ZM70.8711 30.1577H76.6803L77.5613 26.8668H83.7837L84.6922 30.1577H91.3L85.1328 10.3846H77.0658L70.8711 30.1577Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_4\"\n                    d=\"M100.655 26.3682C99.0031 26.3682 98.1221 25.2344 98.1221 22.9943V22.7732C98.1221 20.5607 99.0307 19.344 100.628 19.344C102.252 19.344 103.188 20.4502 103.188 22.7732V22.9943C103.188 25.2067 102.279 26.3682 100.655 26.3682ZM92.8359 34.9689H98.2598V28.0829C98.9755 29.4933 100.517 30.5165 102.637 30.5165C105.914 30.5165 108.694 28.1105 108.694 23.0497V22.8284C108.694 17.7677 105.941 15.3064 102.665 15.3064C100.49 15.3064 99.0582 16.4402 98.2598 17.7953V15.6936H92.8359V34.9689Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_5\"\n                    d=\"M118.452 26.3682C116.8 26.3682 115.919 25.2344 115.919 22.9943V22.7732C115.919 20.5607 116.828 19.344 118.424 19.344C120.049 19.344 120.985 20.4502 120.985 22.7732V22.9943C120.985 25.2067 120.076 26.3682 118.452 26.3682ZM110.633 34.9689H116.057V28.0829C116.773 29.4933 118.314 30.5165 120.434 30.5165C123.711 30.5165 126.491 28.1105 126.491 23.0497V22.8284C126.491 17.7677 123.738 15.3064 120.462 15.3064C118.287 15.3064 116.855 16.4402 116.057 17.7953V15.6936H110.633V34.9689Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_6\"\n                    d=\"M136.335 30.5164C141.621 30.5164 144.484 27.4743 144.484 23.7963C144.484 19.3992 141.731 18.1271 136.775 17.6016C134.6 17.325 134.022 16.8826 134.022 15.9423C134.022 15.085 134.683 14.5043 135.977 14.5043C137.298 14.5043 137.987 15.1956 138.124 16.4125H143.906C143.576 12.0983 140.85 10.1072 135.977 10.1072C131.076 10.1072 128.103 12.762 128.103 16.4125C128.103 20.4777 130.03 22.1369 135.702 22.7731C137.821 23.0772 138.51 23.4091 138.51 24.4599C138.51 25.4278 137.794 26.0916 136.335 26.0916C134.297 26.0916 133.692 25.0684 133.581 23.824H127.662C127.8 28.2763 130.773 30.5164 136.335 30.5164Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_7\"\n                    d=\"M152.423 30.4904C153.607 30.4904 154.626 30.2692 155.286 30.0755V25.9827C154.818 26.1487 154.433 26.204 153.937 26.204C153.056 26.204 152.533 25.7891 152.533 24.7936V19.3456H155.286V15.6951H152.533V12.7361H147.109V15.6951H145.43V19.3456H147.109V25.3189C147.109 28.9417 149.036 30.4904 152.423 30.4904Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_8\"\n                    d=\"M164.66 30.5165C169.149 30.5165 172.673 27.7233 172.673 22.9667V22.7456C172.673 18.0996 169.176 15.3064 164.688 15.3064C160.146 15.3064 156.648 18.1825 156.648 22.8837V23.105C156.648 27.8616 160.173 30.5165 164.66 30.5165ZM164.688 26.5065C162.954 26.5065 162.127 25.2897 162.127 22.939V22.7179C162.127 20.4502 163.036 19.3164 164.688 19.3164C166.368 19.3164 167.166 20.5332 167.166 22.8009V22.9943C167.166 25.2897 166.34 26.5065 164.688 26.5065Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_9\"\n                    d=\"M174.57 30.1573H179.993V23.4926C179.993 21.4185 181.619 20.4229 184.619 20.5887V15.5004C182.472 15.4727 180.902 16.3853 179.993 18.6253V15.6939H174.57V30.1573Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_10\"\n                    d=\"M189.17 34.9704H194.318L202 15.6951H196.878L194.346 22.9129L191.62 15.6951H185.756L191.51 28.7204L189.17 34.9704Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_11\"\n                    d=\"M18.3209 38.794C28.4393 38.794 36.6419 30.4458 36.6419 20.1479C36.6419 9.84988 28.4393 1.50171 18.3209 1.50171C8.20256 1.50171 0 9.84988 0 20.1479C0 30.4458 8.20256 38.794 18.3209 38.794Z\"\n                    fill=\"#0C62F3\"\n                  />\n                  <path\n                    id=\"Vector_12\"\n                    d=\"M6.57812 20.6266C15.2035 18.9364 16.5924 17.5795 18.3223 9.1521C20.0522 17.5795 21.441 18.9364 30.0664 20.6266C21.441 22.3169 20.0522 23.6739 18.3223 32.1012C16.5924 23.6739 15.2035 22.3169 6.57812 20.6266Z\"\n                    fill=\"white\"\n                  />\n                </g>\n              </svg>\n              <div className=\"Footer__follow-us\">\n                <p>Follow us on:</p>\n                <div className=\"Footer__social-media\">\n                  <a href=\"https://www.facebook.com/inappstory/\">\n                    <svg\n                      width=\"25\"\n                      height=\"25\"\n                      viewBox=\"0 0 25 25\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <g clipPath=\"url(#clip0_4394_43901)\">\n                        <path\n                          d=\"M24.3906 12.7969C24.3906 6.375 19.1875 1.17188 12.7656 1.17188C6.34375 1.17188 1.14062 6.375 1.14062 12.7969C1.14062 18.5991 5.39172 23.4084 10.9492 24.2812V16.1573H7.99609V12.7969H10.9492V10.2356C10.9492 7.32234 12.6836 5.71312 15.34 5.71312C16.6122 5.71312 17.9425 5.94 17.9425 5.94V8.79938H16.4762C15.0325 8.79938 14.582 9.69563 14.582 10.6148V12.7969H17.8061L17.2905 16.1573H14.582V24.2812C20.1395 23.4084 24.3906 18.5991 24.3906 12.7969Z\"\n                          fill=\"#0C62F3\"\n                        />\n                      </g>\n                      <defs>\n                        <clipPath id=\"clip0_4394_43901\">\n                          <rect\n                            width=\"24\"\n                            height=\"24\"\n                            fill=\"white\"\n                            transform=\"translate(0.765625 0.796875)\"\n                          />\n                        </clipPath>\n                      </defs>\n                    </svg>\n                  </a>\n                  <a href=\"https://www.linkedin.com/company/inappstory\">\n                    <svg\n                      width=\"23\"\n                      height=\"26\"\n                      viewBox=\"0 0 23 26\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <g clipPath=\"url(#clip0_4394_43904)\">\n                        <path\n                          d=\"M21.1924 1.80469H2.332C1.46779 1.80469 0.765625 2.51624 0.765625 3.38972V22.204C0.765625 23.0775 1.46779 23.7891 2.332 23.7891H21.1924C22.0566 23.7891 22.7637 23.0775 22.7637 22.204V3.38972C22.7637 2.51624 22.0566 1.80469 21.1924 1.80469ZM7.41413 20.6484H4.15371V10.1568H7.41905V20.6484H7.41413ZM5.78392 8.72388C4.73804 8.72388 3.89347 7.87493 3.89347 6.83459C3.89347 5.79426 4.73804 4.94531 5.78392 4.94531C6.8249 4.94531 7.67438 5.79426 7.67438 6.83459C7.67438 7.87983 6.82981 8.72388 5.78392 8.72388ZM19.6358 20.6484H16.3754V15.5449C16.3754 14.3279 16.3508 12.7625 14.6813 12.7625C12.9824 12.7625 12.7221 14.0875 12.7221 15.4566V20.6484H9.46172V10.1568H12.5896V11.5897H12.6338C13.0708 10.7653 14.1363 9.8967 15.7223 9.8967C19.022 9.8967 19.6358 12.0706 19.6358 14.8972V20.6484Z\"\n                          fill=\"#0C62F3\"\n                        />\n                      </g>\n                      <defs>\n                        <clipPath id=\"clip0_4394_43904\">\n                          <rect\n                            width=\"22\"\n                            height=\"25.125\"\n                            fill=\"white\"\n                            transform=\"translate(0.765625 0.234375)\"\n                          />\n                        </clipPath>\n                      </defs>\n                    </svg>\n                  </a>\n                  <a href=\"https://www.twitter.com/inappstory\">\n                    <svg\n                      width=\"23\"\n                      height=\"26\"\n                      viewBox=\"0 0 23 26\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <g clipPath=\"url(#clip0_4394_43907)\">\n                        <path\n                          d=\"M20.4067 1.80469H3.12256C1.82133 1.80469 0.765625 2.85974 0.765625 4.16016V21.4336C0.765625 22.734 1.82133 23.7891 3.12256 23.7891H20.4067C21.7079 23.7891 22.7637 22.734 22.7637 21.4336V4.16016C22.7637 2.85974 21.7079 1.80469 20.4067 1.80469ZM18.0056 9.59736C18.0154 9.73477 18.0154 9.87708 18.0154 10.0145C18.0154 14.269 14.7746 19.1714 8.85285 19.1714C7.02622 19.1714 5.33218 18.6414 3.9082 17.7286C4.16844 17.7581 4.41887 17.7679 4.68402 17.7679C6.19148 17.7679 7.57617 17.2575 8.68099 16.3939C7.26683 16.3644 6.07854 15.437 5.67099 14.1611C6.16693 14.2347 6.61376 14.2347 7.12443 14.1022C5.65135 13.8029 4.54654 12.5073 4.54654 10.9419V10.9027C4.97373 11.1431 5.47458 11.2904 5.99998 11.31C5.55826 11.0164 5.19616 10.618 4.94597 10.1505C4.69579 9.68296 4.56531 9.16082 4.56618 8.63064C4.56618 8.03196 4.72331 7.48235 5.00319 7.00635C6.58921 8.95942 8.97069 10.2353 11.6419 10.3727C11.1852 8.18899 12.8203 6.41748 14.7845 6.41748C15.7125 6.41748 16.5472 6.80515 17.1365 7.43328C17.8632 7.29587 18.5605 7.02598 19.1791 6.65793C18.9385 7.40383 18.4328 8.03196 17.765 8.42944C18.4131 8.36074 19.0417 8.17917 19.6211 7.92891C19.1841 8.57175 18.6341 9.14099 18.0056 9.59736Z\"\n                          fill=\"#0C62F3\"\n                        />\n                      </g>\n                      <defs>\n                        <clipPath id=\"clip0_4394_43907\">\n                          <rect\n                            width=\"22\"\n                            height=\"25.125\"\n                            fill=\"white\"\n                            transform=\"translate(0.765625 0.234375)\"\n                          />\n                        </clipPath>\n                      </defs>\n                    </svg>\n                  </a>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"Footer__col\">\n              <p className=\"Footer__col-header\">Resources</p>\n              <div className=\"Footer__col-links\">\n                <Link to=\"/blog\">Blog</Link>\n                <Link to=\"/write-for-us\">Write for us</Link>\n                <a href=\"https://docs.inappstory.com/\">Documentation</a>\n              </div>\n            </div>\n            <div className=\"Footer__col\">\n              <p className=\"Footer__col-header\">About us</p>\n              <div className=\"Footer__col-links\">\n                <Link to=\"/policy\">Legal</Link>\n                <Link to=\"/faq\">Write for us</Link>\n              </div>\n            </div>\n          </div>\n          <div className=\"Footer__languages\">\n            <Link to=\"/\" className=\"Footer__language\">\n              DE\n            </Link>\n            <Link to=\"/\" className=\"Footer__language\">\n              FR\n            </Link>\n            <Link to=\"/\" className=\"Footer__language\">\n              ES\n            </Link>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport Navbar from \"./navbar\";\nimport Footer from \"./footer\";\nimport \"../../styles/global.scss\";\n\ntype Props = {\n  children: string | JSX.Element | JSX.Element[];\n};\n\nexport default function Layout({ children }: Props) {\n  return (\n    <div className=\"layout\">\n      <Navbar />\n      <div className=\"content\">{children}</div>\n      <Footer />\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport const RequestDemoButton = (\n  <div className=\"request-demo-button\">\n    <Link to=\"/sales\" className=\"button-filled\">\n      Try now\n    </Link>\n    <Link to=\"sales\" className=\"request-demo\">\n      Request demo\n    </Link>\n  </div>\n);\n","import { graphql } from \"gatsby\";\nimport * as React from \"react\";\n// import { StaticImage } from \"gatsby-plugin-image\";\n\ninterface ReviewCardProps {\n  avatar: string;\n  reviewerInfo: string;\n  brandImage: string;\n  reviewText: string;\n}\n\nexport const ReviewCard: React.FC<ReviewCardProps> = ({\n  avatar,\n  reviewerInfo,\n  brandImage,\n  reviewText,\n}) => {\n  return (\n    <div className=\"review-card\">\n      <p className=\"review-card__text text\">{reviewText}</p>\n      <div className=\"review-card__reviewer\">\n        <img\n          className=\"review-card__avatar\"\n          src={avatar}\n          alt=\"partner avatar\"\n        />\n        <p className=\"review-card__reviewer-info text\">{reviewerInfo}</p>\n        <img\n          className=\"review-card__brand-image\"\n          src={brandImage}\n          alt=\"partner image\"\n        />\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nimport Layout from \"../components/essential/layout\";\n\nimport { RequestDemoButton } from \"../components/essential/request-demo-button\";\nimport { ReviewCard } from \"../components/index/review-card\";\n\nimport \"../styles/global.scss\";\nimport \"../styles/index.scss\";\nimport { calculateImageSizes } from \"gatsby-plugin-image/dist/src/image-utils\";\n\nconst StarListItem = (props: { text: string }) => {\n  return (\n    <div className=\"get-started__list-item\">\n      <svg\n        width=\"20\"\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M10 0C10 0 10 10 0 10C10 10 10 20 10 20C10 20 10 10 20 10C10 10 10 0 10 0Z\"\n          fill=\"#0C62F3\"\n        />\n      </svg>\n      <p className=\"get-started__item-text\">{props.text}</p>\n    </div>\n  );\n};\nconst AwardStars = () => {\n  const star = (\n    <svg\n      width=\"21\"\n      height=\"21\"\n      viewBox=\"0 0 21 21\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clip-path=\"url(#clip0_4394_43797)\">\n        <path\n          d=\"M9.33075 2.69809L7.06338 7.29531L1.99047 8.03489C1.08075 8.16684 0.716162 9.28836 1.37588 9.93073L5.04602 13.5071L4.17797 18.5592C4.02172 19.4724 4.98352 20.1564 5.78908 19.7293L10.3273 17.3439L14.8655 19.7293C15.671 20.1529 16.6328 19.4724 16.4766 18.5592L15.6085 13.5071L19.2787 9.93073C19.9384 9.28836 19.5738 8.16684 18.6641 8.03489L13.5912 7.29531L11.3238 2.69809C10.9176 1.87864 9.74047 1.86822 9.33075 2.69809Z\"\n          fill=\"#0D6EFD\"\n          stroke=\"#0D6EFD\"\n          stroke-width=\"0.0694444\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_4394_43797\">\n          <rect\n            width=\"20\"\n            height=\"20\"\n            fill=\"white\"\n            transform=\"translate(0.328125 0.96875)\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n  return (\n    <div className=\"award__stars\">\n      {star}\n      {star}\n      {star}\n      {star}\n      {star}\n    </div>\n  );\n};\n\nexport default function Home({ data }: any) {\n  return (\n    <Layout>\n      <div className=\"content\">\n        <div className=\"get-started\">\n          <h1 className=\"title\">Full screen stories in your mobile app</h1>\n          <p className=\"narration\">\n            Extend the lifecycle of your mobile customer across the journey\n          </p>\n          <div className=\"get-started__features\">\n            <StarListItem text=\"Personalization\" />\n            <StarListItem text=\"Gamification\" />\n            <StarListItem text=\"Onboarding\" />\n            <StarListItem text=\"Short-form videos\" />\n          </div>\n          <div className=\"button-container\">\n            <Link className=\"button-filled\" id=\"book-meeting\" to=\"/sales\">\n              Book a Meeting\n            </Link>\n          </div>\n        </div>\n\n        <div className=\"stories-look\">\n          <StaticImage\n            className=\"stories-look__example\"\n            src=\"../../static/images/index/stories-look-example.png\"\n            alt=\"stories example\"\n            layout=\"fixed\"\n            width={1471}\n            height={586}\n          />\n        </div>\n\n        <div className=\"partnerships placeholder\">\n          <div className=\"slider\"></div>\n        </div>\n\n        <div className=\"marketing-goals placeholder\">\n          <div className=\"marketing-goals__container\">\n            <h2 className=\"marketing-goals__subtitle subtitle\">\n              Solve multiple in-app marketing goals via a single platform\n            </h2>\n            <p className=\"narration\">\n              The Stories feature enhances mobile customer experience across\n              acquisition, onboarding, conversion, and retention touchpoints.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"marketing-slider\">\n          <div className=\"marketing-slider__navigation\"></div>\n          <div className=\"slider\"></div>\n        </div>\n\n        <div className=\"features\">\n          <div className=\"features__title-block\">\n            <h2 className=\"subtitle \">\n              The content platform your team and customers will love\n            </h2>\n            <p className=\"narration\">\n              InAppStory provides a multipurpose solution for medium businesses\n              and enterprise firms to deliver the content that resonates with\n              mobile users.\n            </p>\n          </div>\n\n          <div className=\"features__items\">\n            <div className=\"feature\">\n              <div className=\"feature__img-container\">\n                <StaticImage\n                  src=\"../../static/images/index/features/editor.png\"\n                  alt=\"intuitive editor console\"\n                />\n              </div>\n              <div className=\"feature__text-container\">\n                <h3 className=\"subtitle3\">Intuitive editor console</h3>\n                <p className=\"narration\">\n                  Design all kinds of Stories with any complexity level. Combine\n                  and customize images, videos, messages, targeted actions,\n                  creatives, colors, and fonts for your brand.\n                </p>\n                {RequestDemoButton}\n              </div>\n            </div>\n            <div className=\"feature_reversed\">\n              <div className=\"feature_reversed__img-container\">\n                <StaticImage\n                  src=\"../../static/images/index/features/publishing.png\"\n                  alt=\"publishing\"\n                />\n              </div>\n              <div className=\"feature_reversed__text-container\">\n                <h3 className=\"subtitle3\">Broad publishing settings</h3>\n                <p className=\"narration\">\n                  Easily target and personalize Stories app features via\n                  audience segments and attributes to deliver resonating\n                  content.\n                </p>\n                {RequestDemoButton}\n              </div>\n            </div>\n            <div className=\"feature\">\n              <div className=\"feature__img-container\">\n                <StaticImage\n                  src=\"../../static/images/index/features/widgets.png\"\n                  alt=\"widgets\"\n                />\n              </div>\n              <div className=\"feature__text-container\">\n                <h3 className=\"subtitle3\">Gamified user experience</h3>\n                <p className=\"narration\">\n                  Communicate with your users via gamification and interactive\n                  design mechanics. Choose matching HTML games, quizzes, polls,\n                  tests, and other widgets that suit your audience.\n                </p>\n                {RequestDemoButton}\n              </div>\n            </div>\n            <div className=\"feature_reversed\">\n              <div className=\"feature_reversed__img-container\">\n                <StaticImage\n                  src=\"../../static/images/index/features/analytics.png\"\n                  alt=\"analytics\"\n                />\n              </div>\n              <div className=\"feature_reversed__text-container\">\n                <h3 className=\"subtitle3\">Insightful analytical tools</h3>\n                <p className=\"narration\">\n                  Track Stories and user behavior metrics from the online\n                  dashboard. Import them directly to Google Analytics,\n                  Amplitude, or other analytical tools.\n                </p>\n                {RequestDemoButton}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"stats\">\n          <div className=\"container\">\n            <h2 className=\"title\">\n              Influence customers behaviour in a native way\n            </h2>\n            <div className=\"stats__wrapper\">\n              <div className=\"stat-container\">\n                <p className=\"title\">10m+</p>\n                <p className=\"narration\">Total daily impacts</p>\n                <div className=\"separator\"></div>\n              </div>\n              <div className=\"stat-container\">\n                <p className=\"title\">20%</p>\n                <p className=\"narration\">Average engagement rate</p>\n                <div className=\"separator\"></div>\n              </div>\n              <div className=\"stat-container\">\n                <p className=\"title\">x3</p>\n                <p className=\"narration\">Better conversion vs. banners</p>\n                <div className=\"separator\"></div>\n              </div>\n              <div className=\"stat-container\">\n                <p className=\"title\">2min+</p>\n                <p className=\"narration\">Average increase in user sessions</p>\n                <div className=\"separator\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"reviews\">\n          <div className=\"reviews__top-panel\">\n            <h3 className=\"subtitle3\">What our clients say?</h3>\n          </div>\n          <div className=\"reviews__container placeholder\">\n            <div className=\"reviews__slider-controls\">\n              {/*Добавить интерактивные стрелки слайдера здесь */}\n            </div>\n            {/* <h1>GraphQl testing</h1> */}\n\n            <ReviewCard\n              avatar=\"../../static/images/reviews/avatars/avatar_careem.png\"\n              reviewerInfo=\"Nupur R,\n            Senior Product Manager\"\n              brandImage=\"../../static/images/reviews/brand-images/careem.png\"\n              reviewText=\"New feature introduction, easy communication with the customers and a very high delivery rate against the usual push notifications. Plus, these are interactive, so it helps us increase engagement with the customer.\"\n            />\n          </div>\n        </div>\n\n        <div className=\"awards\">\n          <div className=\"awards__container\">\n            <div className=\"award\">\n              <StaticImage\n                src=\"../../static/images/index/awards/g2.png\"\n                alt=\"g2\"\n                class=\"award__logo\"\n              />\n              <AwardStars />\n\n              <p className=\"award__label\">5.0</p>\n            </div>\n\n            <div className=\"award\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"177\"\n                height=\"229\"\n                viewBox=\"0 0 177 229\"\n                fill=\"none\"\n              >\n                <path\n                  d=\"M16.1484 168.571L90.1047 206.204L161.253 168.571V21.4072H16.1484V168.571Z\"\n                  fill=\"white\"\n                />\n                <path\n                  d=\"M162.752 21.9688L14.6523 171.192L91.4171 209.2L162.752 172.69V21.9688Z\"\n                  fill=\"#F2F3F2\"\n                />\n                <path\n                  d=\"M11.2812 70.4616V171.754L13.9025 173.064L87.8587 210.698L90.1055 211.821L92.3523 210.698L163.687 173.064L166.309 171.754V16.5391H11.2812V70.4616ZM16.1493 168.945V21.4071H161.441V168.945L90.1055 206.579L16.1493 168.945Z\"\n                  fill=\"#DCDEDC\"\n                />\n                <path\n                  d=\"M88.7968 23.8411C89.5457 23.8411 90.2947 23.8411 91.0436 24.0283L88.7968 28.3346C85.4267 28.1474 82.431 30.7686 82.2437 34.1388C82.0565 37.5089 84.6777 40.5046 88.0479 40.6919H88.7968C90.2947 40.6919 91.7925 40.1302 92.9159 39.194L95.3499 43.3131C93.4776 44.6237 91.2308 45.3726 88.7968 45.3726C82.8054 45.5599 77.7502 41.0663 77.5629 35.0749C77.3757 29.0835 81.8693 24.0283 87.8607 23.8411H88.7968ZM96.4733 33.0154L99.2817 37.6962L96.4733 42.1897L93.852 37.6962H88.4223L91.2308 33.0154H96.4733ZM91.9797 31.3303C91.9797 30.5814 92.167 29.8325 92.5414 29.2708C92.9159 28.7091 93.6648 28.1474 94.2265 27.7729L94.601 27.5857C95.3499 27.2112 95.5371 27.024 95.5371 26.6495C95.5371 26.2751 94.9754 25.9006 94.601 25.9006C93.852 25.9006 93.2903 26.2751 92.9159 27.024L91.9797 26.0878C92.167 25.7134 92.5414 25.3389 92.9159 24.9645C93.4776 24.59 94.0393 24.59 94.601 24.59C95.1627 24.59 95.9116 24.7772 96.286 25.1517C96.6605 25.5262 97.035 26.0878 97.035 26.6495C97.035 27.5857 96.4733 28.3346 95.3499 28.7091L94.7882 29.0835C94.2265 29.458 93.852 29.6452 93.6648 30.2069H97.035V31.5175L91.9797 31.3303ZM88.7968 54.7342L106.584 44.6237V16.5391H70.8226V44.4365L88.7968 54.7342ZM169.868 121.014H7.72577L1.73438 134.12L7.72577 147.226H169.868L175.672 134.12L169.868 121.014Z\"\n                  fill=\"#FF492C\"\n                />\n                <path\n                  d=\"M33.3741 92.9104C34.6098 92.9104 35.6957 93.1601 36.6319 93.6594C37.5681 94.1586 38.292 94.8764 38.8038 95.8125C39.3155 96.7362 39.5714 97.7972 39.5714 98.9954C39.5714 100.181 39.3093 101.223 38.7851 102.122C38.2483 103.008 37.4994 103.701 36.5383 104.2C35.5772 104.7 34.4663 104.949 33.2056 104.949H29.2175C29.1302 104.949 29.0865 104.999 29.0865 105.099V112.251C29.0865 112.351 29.049 112.432 28.9741 112.495C28.9117 112.557 28.8306 112.588 28.7307 112.588H25.4542C25.3543 112.588 25.2732 112.557 25.2108 112.495C25.1484 112.432 25.1172 112.351 25.1172 112.251V93.2474C25.1172 93.1476 25.1484 93.0665 25.2108 93.004C25.2732 92.9416 25.3543 92.9104 25.4542 92.9104H33.3741ZM32.7749 101.785C33.6487 101.785 34.3414 101.536 34.8532 101.036C35.3774 100.537 35.6396 99.8879 35.6396 99.0891C35.6396 98.2528 35.3774 97.585 34.8532 97.0857C34.3414 96.5739 33.6487 96.318 32.7749 96.318H29.2175C29.1302 96.318 29.0865 96.368 29.0865 96.4678V101.635C29.0865 101.735 29.1302 101.785 29.2175 101.785H32.7749ZM53.7448 103.882C53.8447 104.594 53.8759 105.386 53.8384 106.26C53.8259 106.497 53.7074 106.616 53.4827 106.616H44.8139C44.7016 106.616 44.6579 106.659 44.6828 106.747C44.7452 107.121 44.8513 107.496 45.0011 107.87C45.4879 108.919 46.4803 109.443 47.9781 109.443C49.1764 109.43 50.1188 108.944 50.8053 107.983C50.8927 107.87 50.98 107.814 51.0674 107.814C51.1173 107.814 51.1798 107.851 51.2546 107.926L53.2767 109.911C53.3766 110.011 53.4265 110.098 53.4265 110.173C53.4265 110.211 53.3891 110.285 53.3142 110.398C52.6901 111.172 51.8975 111.765 50.9363 112.177C49.9503 112.601 48.8768 112.813 47.716 112.813C46.1183 112.813 44.7577 112.451 43.6343 111.727C42.5234 110.991 41.7246 109.967 41.2378 108.657C40.8384 107.72 40.6386 106.497 40.6386 104.987C40.6386 103.951 40.7822 103.04 41.0693 102.253C41.5061 100.93 42.2613 99.8754 43.3348 99.0891C44.4082 98.3027 45.6814 97.9095 47.1543 97.9095C49.0266 97.9095 50.5307 98.4525 51.6665 99.5384C52.8024 100.624 53.4952 102.072 53.7448 103.882ZM47.1917 101.336C46.0059 101.336 45.2258 101.885 44.8513 102.983C44.7764 103.233 44.714 103.533 44.6641 103.882C44.6641 103.97 44.714 104.013 44.8139 104.013H49.6632C49.7755 104.013 49.813 103.97 49.7755 103.882C49.6757 103.345 49.6257 103.083 49.6257 103.096C49.4635 102.534 49.1701 102.097 48.7457 101.785C48.3338 101.486 47.8158 101.336 47.1917 101.336ZM63.4808 97.9657C64.1549 97.9657 64.6916 98.0967 65.091 98.3589C65.2283 98.4337 65.2782 98.571 65.2408 98.7708L64.6604 101.972C64.6479 102.197 64.5168 102.266 64.2672 102.178C63.9801 102.079 63.6556 102.029 63.2936 102.029C63.1438 102.029 62.9316 102.047 62.657 102.085C61.9955 102.147 61.4275 102.397 60.9532 102.834C60.4914 103.271 60.2605 103.857 60.2605 104.594V112.251C60.2605 112.351 60.223 112.432 60.1481 112.495C60.0857 112.557 60.0108 112.588 59.9234 112.588H56.6282C56.5408 112.588 56.4597 112.557 56.3848 112.495C56.3224 112.432 56.2912 112.351 56.2912 112.251V98.4899C56.2912 98.4025 56.3224 98.3214 56.3848 98.2465C56.4597 98.1841 56.5408 98.1529 56.6282 98.1529H59.9234C60.0108 98.1529 60.0857 98.1841 60.1481 98.2465C60.223 98.3214 60.2605 98.4025 60.2605 98.4899V99.5571C60.2605 99.6071 60.2792 99.6445 60.3166 99.6695C60.3416 99.6944 60.3666 99.682 60.3915 99.632C61.1654 98.5211 62.1952 97.9657 63.4808 97.9657ZM75.4449 98.1342C75.5448 98.1342 75.6259 98.1654 75.6883 98.2278C75.7507 98.2902 75.7819 98.3713 75.7819 98.4712V101.13C75.7819 101.23 75.7507 101.311 75.6883 101.373C75.6259 101.436 75.5448 101.467 75.4449 101.467H72.73C72.6302 101.467 72.5803 101.511 72.5803 101.598V112.251C72.5803 112.351 72.5491 112.432 72.4866 112.495C72.4242 112.557 72.3431 112.588 72.2432 112.588H68.9667C68.8668 112.588 68.7857 112.557 68.7233 112.495C68.6609 112.432 68.6297 112.351 68.6297 112.251V101.598C68.6297 101.511 68.5798 101.467 68.4799 101.467H66.8323C66.7324 101.467 66.6513 101.436 66.5889 101.373C66.5265 101.311 66.4953 101.23 66.4953 101.13V98.4712C66.4953 98.3713 66.5265 98.2902 66.5889 98.2278C66.6513 98.1654 66.7324 98.1342 66.8323 98.1342H68.4799C68.5798 98.1342 68.6297 98.0842 68.6297 97.9844V97.3665C68.6297 96.2057 68.8044 95.3007 69.1539 94.6517C69.5159 94.0151 70.0901 93.5595 70.8765 93.2849C71.6753 93.0103 72.78 92.8917 74.1904 92.9292H75.2577C75.345 92.9292 75.4199 92.9604 75.4823 93.0228C75.5572 93.0977 75.5947 93.1788 75.5947 93.2662V95.5317C75.5947 95.6315 75.5572 95.7127 75.4823 95.7751C75.4199 95.85 75.345 95.8874 75.2577 95.8874H74.3215C73.6724 95.8999 73.2168 96.0309 72.9547 96.2806C72.7051 96.5427 72.5803 97.0108 72.5803 97.6848V97.9844C72.5803 98.0842 72.6302 98.1342 72.73 98.1342H75.4449ZM83.5894 112.813C82.0167 112.813 80.6686 112.401 79.5453 111.577C78.4219 110.754 77.6542 109.63 77.2423 108.207C76.9802 107.333 76.8491 106.379 76.8491 105.343C76.8491 104.244 76.9802 103.252 77.2423 102.366C77.6792 100.98 78.4593 99.8941 79.5827 99.1078C80.7061 98.3214 82.0541 97.9282 83.6269 97.9282C85.1497 97.9282 86.4603 98.3152 87.5587 99.0891C88.6322 99.8754 89.3936 100.961 89.843 102.347C90.155 103.283 90.311 104.263 90.311 105.286C90.311 106.297 90.18 107.246 89.9179 108.132C89.506 109.593 88.7383 110.735 87.6149 111.559C86.504 112.395 85.1622 112.813 83.5894 112.813ZM83.5894 109.424C84.2011 109.424 84.7253 109.237 85.1622 108.863C85.5991 108.488 85.9111 107.97 86.0983 107.308C86.2356 106.709 86.3043 106.054 86.3043 105.343C86.3043 104.556 86.2356 103.895 86.0983 103.358C85.8861 102.721 85.5679 102.222 85.1435 101.86C84.7066 101.511 84.1761 101.336 83.552 101.336C82.9279 101.336 82.4036 101.511 81.9793 101.86C81.5549 102.222 81.2491 102.721 81.0618 103.358C80.912 103.795 80.8372 104.456 80.8372 105.343C80.8372 106.191 80.9058 106.847 81.0431 107.308C81.2303 107.97 81.5424 108.488 81.9793 108.863C82.4161 109.237 82.9529 109.424 83.5894 109.424ZM100.047 97.9657C100.721 97.9657 101.258 98.0967 101.657 98.3589C101.807 98.4337 101.857 98.571 101.807 98.7708L101.227 101.972C101.214 102.197 101.083 102.266 100.833 102.178C100.546 102.079 100.222 102.029 99.8598 102.029C99.71 102.029 99.5041 102.047 99.242 102.085C98.5679 102.147 97.9938 102.397 97.5194 102.834C97.0576 103.271 96.8267 103.857 96.8267 104.594V112.251C96.8267 112.351 96.7892 112.432 96.7143 112.495C96.6519 112.557 96.5708 112.588 96.4709 112.588H93.1944C93.107 112.588 93.0259 112.557 92.951 112.495C92.8886 112.432 92.8574 112.351 92.8574 112.251V98.4899C92.8574 98.4025 92.8886 98.3214 92.951 98.2465C93.0259 98.1841 93.107 98.1529 93.1944 98.1529H96.4709C96.5708 98.1529 96.6519 98.1841 96.7143 98.2465C96.7892 98.3214 96.8267 98.4025 96.8267 98.4899V99.5571C96.8267 99.6071 96.8392 99.6445 96.8641 99.6695C96.9141 99.6944 96.9453 99.682 96.9577 99.632C97.7316 98.5211 98.7614 97.9657 100.047 97.9657ZM119.613 97.9282C121.073 97.9282 122.215 98.3651 123.039 99.2388C123.863 100.125 124.275 101.367 124.275 102.965V112.251C124.275 112.351 124.244 112.432 124.181 112.495C124.119 112.557 124.044 112.588 123.956 112.588H120.661C120.574 112.588 120.493 112.557 120.418 112.495C120.355 112.432 120.324 112.351 120.324 112.251V103.826C120.324 103.065 120.131 102.459 119.744 102.01C119.344 101.561 118.814 101.336 118.152 101.336C117.503 101.336 116.973 101.561 116.561 102.01C116.149 102.459 115.943 103.058 115.943 103.807V112.251C115.943 112.351 115.912 112.432 115.849 112.495C115.774 112.557 115.693 112.588 115.606 112.588H112.348C112.248 112.588 112.167 112.557 112.105 112.495C112.042 112.432 112.011 112.351 112.011 112.251V103.826C112.011 103.077 111.805 102.472 111.393 102.01C110.981 101.561 110.445 101.336 109.783 101.336C109.196 101.336 108.697 101.511 108.285 101.86C107.886 102.222 107.649 102.721 107.574 103.358V112.251C107.574 112.351 107.543 112.432 107.48 112.495C107.405 112.557 107.324 112.588 107.237 112.588H103.96C103.86 112.588 103.779 112.557 103.717 112.495C103.654 112.432 103.623 112.351 103.623 112.251V98.4899C103.623 98.4025 103.654 98.3214 103.717 98.2465C103.779 98.1841 103.86 98.1529 103.96 98.1529H107.237C107.324 98.1529 107.405 98.1841 107.48 98.2465C107.543 98.3214 107.574 98.4025 107.574 98.4899V99.5946C107.574 99.6445 107.592 99.6819 107.63 99.7069C107.667 99.7194 107.705 99.6944 107.742 99.632C108.516 98.4962 109.708 97.9282 111.318 97.9282C112.255 97.9282 113.072 98.1279 113.771 98.5274C114.47 98.9143 115.007 99.476 115.381 100.212C115.431 100.325 115.5 100.325 115.587 100.212C115.987 99.4385 116.542 98.8644 117.254 98.4899C117.953 98.1155 118.739 97.9282 119.613 97.9282ZM139.759 103.882C139.871 104.594 139.909 105.386 139.871 106.26C139.846 106.497 139.721 106.616 139.497 106.616H130.828C130.715 106.616 130.678 106.659 130.715 106.747C130.765 107.121 130.865 107.496 131.015 107.87C131.502 108.919 132.494 109.443 133.992 109.443C135.19 109.43 136.139 108.944 136.838 107.983C136.913 107.87 136.994 107.814 137.081 107.814C137.144 107.814 137.212 107.851 137.287 107.926L139.309 109.911C139.397 110.011 139.44 110.098 139.44 110.173C139.44 110.211 139.403 110.285 139.328 110.398C138.717 111.172 137.924 111.765 136.95 112.177C135.977 112.601 134.909 112.813 133.749 112.813C132.138 112.813 130.778 112.451 129.667 111.727C128.544 110.991 127.739 109.967 127.252 108.657C126.865 107.72 126.671 106.497 126.671 104.987C126.671 103.951 126.809 103.04 127.083 102.253C127.52 100.93 128.275 99.8754 129.349 99.0891C130.422 98.3027 131.702 97.9095 133.187 97.9095C135.059 97.9095 136.563 98.4525 137.699 99.5384C138.835 100.624 139.522 102.072 139.759 103.882ZM133.206 101.336C132.032 101.336 131.258 101.885 130.884 102.983C130.809 103.233 130.74 103.533 130.678 103.882C130.678 103.97 130.728 104.013 130.828 104.013H135.677C135.789 104.013 135.827 103.97 135.789 103.882C135.702 103.345 135.658 103.083 135.658 103.096C135.484 102.534 135.19 102.097 134.778 101.785C134.354 101.486 133.83 101.336 133.206 101.336ZM149.495 97.9657C150.169 97.9657 150.706 98.0967 151.105 98.3589C151.255 98.4337 151.311 98.571 151.273 98.7708L150.693 101.972C150.668 102.197 150.531 102.266 150.281 102.178C150.007 102.079 149.682 102.029 149.308 102.029C149.158 102.029 148.952 102.047 148.69 102.085C148.016 102.147 147.441 102.397 146.967 102.834C146.505 103.271 146.274 103.857 146.274 104.594V112.251C146.274 112.351 146.243 112.432 146.181 112.495C146.106 112.557 146.025 112.588 145.937 112.588H142.642C142.555 112.588 142.48 112.557 142.417 112.495C142.343 112.432 142.305 112.351 142.305 112.251V98.4899C142.305 98.4025 142.343 98.3214 142.417 98.2465C142.48 98.1841 142.555 98.1529 142.642 98.1529H145.937C146.025 98.1529 146.106 98.1841 146.181 98.2465C146.243 98.3214 146.274 98.4025 146.274 98.4899V99.5571C146.274 99.6071 146.293 99.6445 146.331 99.6695C146.368 99.6944 146.399 99.682 146.424 99.632C147.186 98.5211 148.209 97.9657 149.495 97.9657ZM72.2432 65.1815C72.2432 65.0941 72.2745 65.013 72.3369 64.9381C72.3993 64.8757 72.4742 64.8445 72.5615 64.8445H75.8568C75.9442 64.8445 76.0253 64.8757 76.1002 64.9381C76.1626 65.013 76.1938 65.0941 76.1938 65.1815V84.1667C76.1938 84.2666 76.1626 84.3477 76.1002 84.4101C76.0253 84.4726 75.9442 84.5038 75.8568 84.5038H72.5615C72.4742 84.5038 72.3993 84.4726 72.3369 84.4101C72.2745 84.3477 72.2432 84.2666 72.2432 84.1667V76.4154C72.2432 76.328 72.1933 76.2843 72.0935 76.2843H65.8774C65.79 76.2843 65.7463 76.328 65.7463 76.4154V84.1667C65.7463 84.2666 65.7151 84.3477 65.6527 84.4101C65.5778 84.4726 65.4967 84.5038 65.4093 84.5038H62.114C62.0267 84.5038 61.9518 84.4726 61.8894 84.4101C61.8145 84.3477 61.777 84.2666 61.777 84.1667V65.1815C61.777 65.0941 61.8145 65.013 61.8894 64.9381C61.9518 64.8757 62.0267 64.8445 62.114 64.8445H65.4093C65.4967 64.8445 65.5778 64.8757 65.6527 64.9381C65.7151 65.013 65.7463 65.0941 65.7463 65.1815V72.7269C65.7463 72.8268 65.79 72.8767 65.8774 72.8767H72.0935C72.1933 72.8767 72.2432 72.8268 72.2432 72.7269V65.1815ZM81.3052 68.4393C80.6686 68.4393 80.1382 68.2271 79.7138 67.8027C79.2894 67.3908 79.0772 66.8666 79.0772 66.23C79.0772 65.5685 79.2831 65.0317 79.695 64.6198C80.1069 64.2079 80.6437 64.002 81.3052 64.002C81.9668 64.002 82.5035 64.2079 82.9154 64.6198C83.3273 65.0317 83.5333 65.5685 83.5333 66.23C83.5333 66.8666 83.3211 67.3908 82.8967 67.8027C82.4723 68.2271 81.9418 68.4393 81.3052 68.4393ZM79.6201 84.5038C79.5328 84.5038 79.4516 84.4726 79.3767 84.4101C79.3143 84.3477 79.2831 84.2666 79.2831 84.1667V70.3865C79.2831 70.2867 79.3143 70.2055 79.3767 70.1431C79.4516 70.0807 79.5328 70.0495 79.6201 70.0495H82.9154C83.0028 70.0495 83.0777 70.0807 83.1401 70.1431C83.215 70.2055 83.2524 70.2867 83.2524 70.3865V84.1667C83.2524 84.2666 83.215 84.3477 83.1401 84.4101C83.0777 84.4726 83.0028 84.5038 82.9154 84.5038H79.6201ZM95.1416 70.4053C95.1416 70.3179 95.179 70.2367 95.2539 70.1619C95.3163 70.0994 95.3912 70.0682 95.4786 70.0682H98.7739C98.8613 70.0682 98.9424 70.0994 99.0173 70.1619C99.0797 70.2367 99.1109 70.3179 99.1109 70.4053V83.2119C99.1109 85.6583 98.4057 87.4058 96.9952 88.4543C95.5847 89.5153 93.7623 90.0458 91.528 90.0458C90.8665 90.0458 90.1363 89.9959 89.3374 89.896C89.1502 89.871 89.0566 89.7525 89.0566 89.5403L89.1689 86.6382C89.1689 86.3885 89.3 86.2825 89.5621 86.3199C90.2362 86.4322 90.854 86.4884 91.4157 86.4884C92.614 86.4884 93.5377 86.2325 94.1867 85.7208C94.8233 85.184 95.1416 84.3415 95.1416 83.1931C95.1416 83.1307 95.1229 83.0933 95.0854 83.0808C95.048 83.0683 95.0105 83.087 94.9731 83.137C94.2616 83.8984 93.2256 84.2791 91.8651 84.2791C90.6418 84.2791 89.5247 83.9857 88.5136 83.3991C87.4901 82.8124 86.7599 81.8638 86.323 80.5532C86.0484 79.6919 85.9111 78.5748 85.9111 77.2017C85.9111 75.7413 86.0796 74.5555 86.4166 73.6444C86.8036 72.496 87.4651 71.5786 88.4013 70.8921C89.3374 70.1931 90.4296 69.8436 91.6778 69.8436C93.1133 69.8436 94.2117 70.2742 94.9731 71.1355C95.0105 71.1729 95.048 71.1854 95.0854 71.1729C95.1229 71.1604 95.1416 71.1292 95.1416 71.0793V70.4053ZM94.9169 79.4672C95.0667 78.918 95.1416 78.1504 95.1416 77.1643C95.1416 76.5901 95.1229 76.147 95.0854 75.835C95.048 75.5104 94.9856 75.2046 94.8982 74.9175C94.7234 74.4182 94.4426 74.0126 94.0557 73.7005C93.6687 73.401 93.1819 73.2512 92.5953 73.2512C92.0336 73.2512 91.5592 73.401 91.1723 73.7005C90.7729 74.0126 90.4796 74.4182 90.2923 74.9175C90.0302 75.4792 89.8991 76.2406 89.8991 77.2017C89.8991 78.2502 90.0115 78.9992 90.2361 79.4485C90.3984 79.9603 90.6917 80.3659 91.1161 80.6655C91.5405 80.9776 92.0398 81.1336 92.614 81.1336C93.2131 81.1336 93.7124 80.9776 94.1118 80.6655C94.4988 80.3659 94.7671 79.9665 94.9169 79.4672ZM109.484 69.8436C110.981 69.8436 112.186 70.3054 113.097 71.2291C114.008 72.1403 114.464 73.3822 114.464 74.955V84.1667C114.464 84.2666 114.433 84.3477 114.37 84.4101C114.308 84.4726 114.233 84.5038 114.146 84.5038H110.85C110.763 84.5038 110.682 84.4726 110.607 84.4101C110.544 84.3477 110.513 84.2666 110.513 84.1667V75.7601C110.513 75.0236 110.301 74.4182 109.877 73.9439C109.465 73.4821 108.909 73.2512 108.21 73.2512C107.524 73.2512 106.968 73.4821 106.544 73.9439C106.12 74.4182 105.907 75.0236 105.907 75.7601V84.1667C105.907 84.2666 105.876 84.3477 105.814 84.4101C105.751 84.4726 105.67 84.5038 105.57 84.5038H102.294C102.194 84.5038 102.113 84.4726 102.05 84.4101C101.988 84.3477 101.957 84.2666 101.957 84.1667V65.1815C101.957 65.0941 101.988 65.013 102.05 64.9381C102.113 64.8757 102.194 64.8445 102.294 64.8445H105.57C105.67 64.8445 105.751 64.8757 105.814 64.9381C105.876 65.013 105.907 65.0941 105.907 65.1815V71.3976C105.907 71.4475 105.926 71.485 105.964 71.5099C106.001 71.5224 106.026 71.5099 106.038 71.4725C106.812 70.3865 107.961 69.8436 109.484 69.8436Z\"\n                  fill=\"#252530\"\n                />\n                <path\n                  d=\"M59.3994 141.422C59.2621 141.422 59.1747 141.36 59.1373 141.235L55.7297 128.559L55.7109 128.484C55.7109 128.372 55.7796 128.316 55.9169 128.316H57.7518C57.8891 128.316 57.9764 128.378 58.0139 128.503L60.1483 137.041C60.1608 137.078 60.1795 137.097 60.2045 137.097C60.2294 137.097 60.2482 137.078 60.2607 137.041L62.3015 128.503C62.3389 128.378 62.4201 128.316 62.5449 128.316H64.3423C64.4796 128.316 64.567 128.378 64.6044 128.503L66.7763 137.06C66.7888 137.097 66.8075 137.116 66.8325 137.116C66.8574 137.116 66.8762 137.097 66.8886 137.06L68.9856 128.503C69.0231 128.378 69.1104 128.316 69.2477 128.316H70.989C71.1637 128.316 71.2324 128.397 71.1949 128.559L67.9558 141.235C67.9184 141.36 67.831 141.422 67.6937 141.422H65.9525C65.8152 141.422 65.7278 141.36 65.6904 141.235L63.4997 132.304C63.4873 132.266 63.4685 132.242 63.4436 132.229C63.4186 132.229 63.3999 132.254 63.3874 132.304L61.2904 141.235C61.253 141.36 61.1718 141.422 61.047 141.422H59.3994ZM73.2732 141.422C73.2108 141.422 73.1546 141.397 73.1047 141.347C73.0673 141.31 73.0485 141.26 73.0485 141.197V128.541C73.0485 128.478 73.0673 128.428 73.1047 128.391C73.1546 128.341 73.2108 128.316 73.2732 128.316H74.9957C75.0581 128.316 75.1081 128.341 75.1455 128.391C75.1954 128.428 75.2204 128.478 75.2204 128.541V141.197C75.2204 141.26 75.1954 141.31 75.1455 141.347C75.1081 141.397 75.0581 141.422 74.9957 141.422H73.2732ZM85.5743 128.541C85.5743 128.478 85.593 128.428 85.6305 128.391C85.6804 128.341 85.7366 128.316 85.799 128.316H87.5215C87.5839 128.316 87.6338 128.341 87.6713 128.391C87.7212 128.428 87.7462 128.478 87.7462 128.541V141.197C87.7462 141.26 87.7212 141.31 87.6713 141.347C87.6338 141.397 87.5839 141.422 87.5215 141.422H85.8551C85.7303 141.422 85.6429 141.372 85.593 141.272L80.2008 132.435C80.1758 132.398 80.1508 132.379 80.1259 132.379C80.1009 132.391 80.0884 132.423 80.0884 132.472L80.1259 141.197C80.1259 141.26 80.1009 141.31 80.051 141.347C80.0135 141.397 79.9636 141.422 79.9012 141.422H78.1787C78.1163 141.422 78.0601 141.397 78.0102 141.347C77.9727 141.31 77.954 141.26 77.954 141.197V128.541C77.954 128.478 77.9727 128.428 78.0102 128.391C78.0601 128.341 78.1163 128.316 78.1787 128.316H79.845C79.9698 128.316 80.0572 128.366 80.1071 128.466L85.4807 137.303C85.5056 137.34 85.5306 137.353 85.5556 137.34C85.5805 137.34 85.593 137.315 85.593 137.266L85.5743 128.541ZM99.0924 128.316C99.1548 128.316 99.2047 128.341 99.2422 128.391C99.2921 128.428 99.317 128.478 99.317 128.541V129.982C99.317 130.045 99.2921 130.095 99.2422 130.132C99.2047 130.182 99.1548 130.207 99.0924 130.207H95.6473C95.5849 130.207 95.5537 130.238 95.5537 130.301V141.197C95.5537 141.26 95.535 141.31 95.4975 141.347C95.4476 141.397 95.3914 141.422 95.329 141.422H93.6065C93.5441 141.422 93.4942 141.397 93.4567 141.347C93.4068 141.31 93.3818 141.26 93.3818 141.197V130.301C93.3818 130.238 93.3506 130.207 93.2882 130.207H89.9742C89.9118 130.207 89.8556 130.182 89.8057 130.132C89.7683 130.095 89.7495 130.045 89.7495 129.982V128.541C89.7495 128.478 89.7683 128.428 89.8057 128.391C89.8556 128.341 89.9118 128.316 89.9742 128.316H99.0924ZM110.195 129.964C110.195 130.026 110.17 130.076 110.12 130.113C110.083 130.163 110.033 130.188 109.97 130.188H103.586C103.524 130.188 103.492 130.219 103.492 130.282V133.783C103.492 133.845 103.524 133.877 103.586 133.877H107.874C107.936 133.877 107.992 133.895 108.042 133.933C108.079 133.983 108.098 134.039 108.098 134.101V135.524C108.098 135.587 108.079 135.643 108.042 135.693C107.992 135.73 107.936 135.749 107.874 135.749H103.586C103.524 135.749 103.492 135.78 103.492 135.843V139.456C103.492 139.519 103.524 139.55 103.586 139.55H109.97C110.033 139.55 110.083 139.575 110.12 139.625C110.17 139.662 110.195 139.712 110.195 139.774V141.197C110.195 141.26 110.17 141.31 110.12 141.347C110.083 141.397 110.033 141.422 109.97 141.422H101.545C101.483 141.422 101.427 141.397 101.377 141.347C101.339 141.31 101.32 141.26 101.32 141.197V128.541C101.32 128.478 101.339 128.428 101.377 128.391C101.427 128.341 101.483 128.316 101.545 128.316H109.97C110.033 128.316 110.083 128.341 110.12 128.391C110.17 128.428 110.195 128.478 110.195 128.541V129.964ZM119.763 141.422C119.638 141.422 119.55 141.366 119.501 141.254L117.029 135.861C117.004 135.811 116.967 135.786 116.917 135.786H114.67C114.608 135.786 114.576 135.818 114.576 135.88V141.197C114.576 141.26 114.551 141.31 114.501 141.347C114.464 141.397 114.414 141.422 114.352 141.422H112.629C112.567 141.422 112.511 141.397 112.461 141.347C112.423 141.31 112.404 141.26 112.404 141.197V128.541C112.404 128.478 112.423 128.428 112.461 128.391C112.511 128.341 112.567 128.316 112.629 128.316H117.778C118.539 128.316 119.213 128.472 119.8 128.784C120.387 129.109 120.842 129.558 121.167 130.132C121.491 130.719 121.654 131.387 121.654 132.135C121.654 132.997 121.429 133.727 120.98 134.326C120.543 134.938 119.931 135.362 119.145 135.599C119.12 135.599 119.101 135.612 119.089 135.637C119.076 135.662 119.076 135.687 119.089 135.712L121.729 141.16C121.754 141.21 121.766 141.247 121.766 141.272C121.766 141.372 121.697 141.422 121.56 141.422H119.763ZM114.67 130.188C114.608 130.188 114.576 130.219 114.576 130.282V134.008C114.576 134.07 114.608 134.101 114.67 134.101H117.478C118.078 134.101 118.564 133.92 118.939 133.558C119.301 133.209 119.482 132.741 119.482 132.154C119.482 131.567 119.301 131.093 118.939 130.731C118.564 130.369 118.078 130.188 117.478 130.188H114.67Z\"\n                  fill=\"white\"\n                />\n                <path\n                  d=\"M64.7003 175.236C64.6629 175.274 64.6504 175.311 64.6629 175.349C64.6878 175.386 64.7253 175.405 64.7752 175.405H72.1334C72.2208 175.405 72.2956 175.436 72.3581 175.498C72.4329 175.561 72.4704 175.636 72.4704 175.723V178.363C72.4704 178.45 72.4329 178.525 72.3581 178.588C72.2956 178.65 72.2208 178.681 72.1334 178.681H59.9259C59.8261 178.681 59.7449 178.65 59.6825 178.588C59.6201 178.525 59.5889 178.45 59.5889 178.363V175.854C59.5889 175.692 59.6451 175.555 59.7574 175.442C60.6436 174.581 61.5486 173.639 62.4723 172.615C63.3959 171.591 63.9763 170.955 64.2135 170.705C64.7128 170.106 65.2246 169.532 65.7488 168.983C67.3964 167.16 68.2203 165.806 68.2203 164.92C68.2203 164.283 67.9956 163.759 67.5462 163.347C67.0969 162.948 66.5102 162.748 65.7863 162.748C65.0623 162.748 64.4756 162.948 64.0263 163.347C63.5644 163.759 63.3335 164.302 63.3335 164.976V165.65C63.3335 165.737 63.3023 165.812 63.2399 165.875C63.1775 165.937 63.1026 165.968 63.0152 165.968H59.8136C59.7262 165.968 59.6513 165.937 59.5889 165.875C59.514 165.812 59.4766 165.737 59.4766 165.65V164.377C59.539 163.403 59.851 162.536 60.4127 161.774C60.9744 161.025 61.7171 160.451 62.6408 160.052C63.5769 159.652 64.6254 159.453 65.7863 159.453C67.0719 159.453 68.189 159.696 69.1377 160.183C70.0863 160.657 70.8165 161.3 71.3283 162.111C71.8525 162.935 72.1147 163.84 72.1147 164.826C72.1147 165.588 71.9212 166.368 71.5342 167.167C71.1598 167.965 70.5918 168.827 69.8304 169.75C69.2687 170.449 68.6634 171.148 68.0143 171.847C67.3652 172.534 66.3979 173.526 65.1122 174.824L64.7003 175.236ZM81.289 178.981C79.2918 178.981 77.7191 178.425 76.5708 177.314C75.4099 176.204 74.8295 174.687 74.8295 172.765V165.594C74.8295 163.709 75.4099 162.217 76.5708 161.119C77.7191 160.008 79.2918 159.453 81.289 159.453C83.2736 159.453 84.8526 160.008 86.0259 161.119C87.1868 162.217 87.7672 163.709 87.7672 165.594V172.765C87.7672 174.687 87.1868 176.204 86.0259 177.314C84.8526 178.425 83.2736 178.981 81.289 178.981ZM81.289 175.704C82.1003 175.704 82.7431 175.455 83.2175 174.955C83.7043 174.456 83.9477 173.788 83.9477 172.952V165.481C83.9477 164.658 83.7043 163.996 83.2175 163.497C82.7431 162.998 82.1003 162.748 81.289 162.748C80.4901 162.748 79.8535 162.998 79.3792 163.497C78.8924 163.996 78.649 164.658 78.649 165.481V172.952C78.649 173.788 78.8924 174.456 79.3792 174.955C79.8535 175.455 80.4901 175.704 81.289 175.704ZM95.3688 175.236C95.3313 175.274 95.3251 175.311 95.35 175.349C95.3625 175.386 95.4 175.405 95.4624 175.405H102.821C102.908 175.405 102.983 175.436 103.045 175.498C103.108 175.561 103.139 175.636 103.139 175.723V178.363C103.139 178.45 103.108 178.525 103.045 178.588C102.983 178.65 102.908 178.681 102.821 178.681H90.5944C90.507 178.681 90.4321 178.65 90.3697 178.588C90.3073 178.525 90.2761 178.45 90.2761 178.363V175.854C90.2761 175.692 90.326 175.555 90.4259 175.442C91.3246 174.581 92.2295 173.639 93.1407 172.615C94.0644 171.591 94.6448 170.955 94.882 170.705C95.3937 170.106 95.9117 169.532 96.436 168.983C98.0836 167.16 98.9074 165.806 98.9074 164.92C98.9074 164.283 98.6827 163.759 98.2334 163.347C97.7715 162.948 97.1787 162.748 96.4547 162.748C95.7307 162.748 95.1441 162.948 94.6947 163.347C94.2454 163.759 94.0207 164.302 94.0207 164.976V165.65C94.0207 165.737 93.9895 165.812 93.9271 165.875C93.8647 165.937 93.7835 165.968 93.6837 165.968H90.482C90.3946 165.968 90.3198 165.937 90.2573 165.875C90.1949 165.812 90.1637 165.737 90.1637 165.65V164.377C90.2137 163.403 90.5195 162.536 91.0812 161.774C91.6429 161.025 92.3918 160.451 93.3279 160.052C94.2641 159.652 95.3063 159.453 96.4547 159.453C97.7403 159.453 98.8575 159.696 99.8061 160.183C100.767 160.657 101.504 161.3 102.015 162.111C102.527 162.935 102.783 163.84 102.783 164.826C102.783 165.588 102.596 166.368 102.221 167.167C101.834 167.965 101.26 168.827 100.499 169.75C99.9372 170.449 99.3318 171.148 98.6827 171.847C98.0337 172.534 97.0663 173.526 95.7807 174.824L95.3688 175.236ZM116.825 169.619C117.187 170.443 117.368 171.398 117.368 172.484C117.368 173.47 117.206 174.375 116.882 175.199C116.445 176.36 115.715 177.265 114.691 177.914C113.667 178.575 112.457 178.906 111.059 178.906C109.686 178.906 108.481 178.563 107.445 177.876C106.409 177.177 105.66 176.241 105.198 175.068C104.949 174.369 104.805 173.607 104.768 172.783C104.768 172.571 104.874 172.465 105.086 172.465H108.306C108.519 172.465 108.625 172.571 108.625 172.783C108.7 173.383 108.799 173.826 108.924 174.113C109.087 174.587 109.355 174.955 109.729 175.217C110.091 175.48 110.528 175.611 111.04 175.611C112.051 175.611 112.75 175.168 113.137 174.281C113.387 173.745 113.511 173.114 113.511 172.39C113.511 171.529 113.374 170.83 113.1 170.293C112.688 169.445 111.995 169.02 111.021 169.02C110.822 169.02 110.609 169.076 110.385 169.189C110.172 169.313 109.91 169.482 109.598 169.694C109.523 169.744 109.455 169.769 109.392 169.769C109.28 169.769 109.199 169.719 109.149 169.619L107.539 167.354C107.501 167.304 107.483 167.241 107.483 167.167C107.483 167.054 107.52 166.967 107.595 166.904L111.901 163.122C111.939 163.085 111.957 163.047 111.957 163.01C111.945 162.973 111.914 162.954 111.864 162.954H105.479C105.392 162.954 105.311 162.923 105.236 162.86C105.173 162.798 105.142 162.723 105.142 162.636V159.996C105.142 159.908 105.173 159.833 105.236 159.771C105.311 159.709 105.392 159.677 105.479 159.677H116.788C116.888 159.677 116.969 159.709 117.031 159.771C117.094 159.833 117.125 159.908 117.125 159.996V162.991C117.125 163.129 117.063 163.266 116.938 163.403L113.38 166.661C113.343 166.698 113.33 166.73 113.343 166.755C113.343 166.792 113.38 166.811 113.455 166.811C115.028 167.123 116.151 168.059 116.825 169.619Z\"\n                  fill=\"#252530\"\n                />\n              </svg>\n            </div>\n\n            <div className=\"award\">\n              <StaticImage\n                src=\"../../static/images/index/awards/capterra.png\"\n                alt=\"capterra\"\n                class=\"award__logo\"\n              />\n              <AwardStars />\n              <p className=\"award__label\">5.0</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"media-about-us placeholder\">\n          <div className=\"media-about-us__container\"></div>\n        </div>\n\n        <div className=\"how-it-works\">\n          <div className=\"how-it-works__container\">\n            <h2 className=\"subtitle\">Let's start with in app Stories?</h2>\n            <div className=\"steps\">\n              <div className=\"steps__step-campaign\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"50\"\n                  height=\"52\"\n                  viewBox=\"0 0 50 52\"\n                  fill=\"none\"\n                >\n                  <path\n                    d=\"M18.75 20.7969C18.75 19.1367 17.2852 17.6719 15.625 17.6719H14.0625C10.5469 17.6719 7.8125 20.5039 7.8125 23.9219V28.6094C7.8125 32.125 10.5469 34.8594 14.0625 34.8594H15.625C17.2852 34.8594 18.75 33.4922 18.75 31.7344V20.7969ZM35.9375 34.8594C39.3555 34.8594 42.1875 32.125 42.1875 28.6094V23.9219C42.1875 20.5039 39.3555 17.6719 35.9375 17.6719H34.375C32.6172 17.6719 31.25 19.1367 31.25 20.7969V31.7344C31.25 33.4922 32.6172 34.8594 34.375 34.8594H35.9375ZM25 0.484375C11.0352 0.484375 0.390625 12.1055 0 25.4844V27.0469C0 27.9258 0.683594 28.6094 1.5625 28.6094H3.125C3.90625 28.6094 4.6875 27.9258 4.6875 27.0469V25.4844C4.6875 14.3516 13.7695 5.17188 25 5.17188C36.1328 5.17188 45.3125 14.3516 45.3125 25.4844H45.2148C45.2148 25.7774 45.3125 41.6953 45.3125 41.6953C45.3125 44.0391 43.457 45.7969 41.1133 45.7969H31.25C31.25 43.2578 29.1016 41.1094 26.5625 41.1094H23.4375C20.8008 41.1094 18.75 43.2578 18.75 45.7969C18.75 48.4336 20.8008 50.4844 23.4375 50.4844H41.1133C45.9961 50.4844 50 46.5782 50 41.6953V25.4844C49.5117 12.1055 38.8672 0.484375 25 0.484375Z\"\n                    fill=\"#0C62F3\"\n                  />\n                </svg>\n                <p className=\"subtitle3\">\n                  <span>Request a personalized demo</span>\n                </p>\n                <p className=\"narration\">\n                  Have a quick call with us to see the full capabilities of the\n                  Stories console. Learn how to launch Stories directly to your\n                  app or mobile web based on your business needs, analyze\n                  conversion. Get tips and leads on how to improve efficiency.\n                </p>\n              </div>\n\n              <div className=\"steps__step-campaign\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"38\"\n                  height=\"52\"\n                  viewBox=\"0 0 38 52\"\n                  fill=\"none\"\n                >\n                  <path\n                    d=\"M31.25 3.60938C31.25 1.94922 29.7852 0.484375 28.125 0.484375C26.3672 0.484375 25 1.94922 25 3.60938V12.9844H31.25V3.60938ZM35.9375 16.1094H1.5625C0.683594 16.1094 0 16.8906 0 17.6719V20.7969C0 21.6758 0.683594 22.3594 1.5625 22.3594H3.125V25.4844C3.125 32.6133 8.69141 39.4492 15.625 40.8164V50.4844H21.875V40.8164C28.7109 39.4492 34.2773 32.6133 34.375 25.4844V22.3594H35.9375C36.7188 22.3594 37.5 21.6758 37.5 20.7969V17.6719C37.5 16.8906 36.7188 16.1094 35.9375 16.1094ZM12.5 3.60938C12.5 1.94922 11.0352 0.484375 9.375 0.484375C7.61719 0.484375 6.25 1.94922 6.25 3.60938V12.9844H12.5V3.60938Z\"\n                    fill=\"#0C62F3\"\n                  />\n                </svg>\n                <p className=\"subtitle3\">\n                  <span>Integrate SDK</span>\n                </p>\n                <p className=\"narration\">\n                  Select a tariff plan and integrate the SDK into an app or\n                  mobile web. You are ready to start campaigns anytime now.{\" \"}\n                </p>\n              </div>\n\n              <div className=\"steps__step-campaign\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"50\"\n                  height=\"52\"\n                  viewBox=\"0 0 50 52\"\n                  fill=\"none\"\n                >\n                  <path\n                    d=\"M49.3164 2.43749C49.1211 1.85157 48.6328 1.36329 48.0469 1.16797C44.9219 0.484375 42.4805 0.484375 40.0391 0.484375C29.9805 0.484375 23.9258 5.95312 19.4336 12.9844H9.17969C7.61719 13.0821 5.76172 14.1563 4.98047 15.6211L0.195312 25.2891C0.0976562 25.5821 0 25.9727 0 26.2656C0 27.6328 0.976562 28.6094 2.34375 28.6094H12.4023L10.2539 30.8555C9.08203 31.9297 8.98438 33.9805 10.2539 35.25L15.2344 40.2305C16.3086 41.3047 18.3594 41.5 19.6289 40.2305L21.7773 38.0821V48.1406C21.875 49.5078 22.8516 50.4844 24.2188 50.4844C24.5117 50.4844 24.9023 50.3867 25.1953 50.2891L34.8633 45.5039C36.3281 44.7227 37.4023 42.8672 37.4023 41.3047V31.0508C44.5312 26.5586 49.9023 20.5039 49.9023 10.4453C50 8.00391 50 5.5625 49.3164 2.43749ZM37.5 16.8906C35.2539 16.8906 33.5938 15.2305 33.5938 12.9844C33.5938 10.836 35.2539 9.07812 37.5 9.07812C39.6484 9.07812 41.4062 10.836 41.4062 12.9844C41.4062 15.2305 39.6484 16.8906 37.5 16.8906Z\"\n                    fill=\"#0C62F3\"\n                  />\n                </svg>\n                <p className=\"subtitle3\">\n                  <span>Launch your first Stories</span>\n                </p>\n                <p className=\"narration\">\n                  Publish Stories carousel or use in-app Stories as onboarding.\n                  Hit us up 24/7 for any questions.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"get-demo\">\n          <div className=\"get-demo__container\">\n            <div className=\"get-demo__description\">\n              <h2 className=\"subtitle\">\n                Extend the life cycle of your mobile customers\n              </h2>\n              <p className=\"narration\">\n                Get familiar with the InAppStory app Stories building platform\n                by exploring it in demo mode\n              </p>\n            </div>\n            <div className=\"get-demo__form-container\">\n              <div className=\"form\">\n                <input\n                  type=\"email\"\n                  placeholder=\"Your work e-mail address\"\n                  className=\"form__input\"\n                />\n                <Link to=\"/sales\" className=\"button-filled form__button\">\n                  Get started\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\n// const avatarQuery = graphql`\n//   query {\n//     avatars: allFile(\n//       filter: {\n//         extension: { regex: \"/(jpg)|(png)|(jpeg)/\" }\n//         relativeDirectory: { eq: \"reviews/avatars\" }\n//       }\n//     ) {\n//       edges {\n//         node {\n//           id\n//           base\n//           childImageSharp {\n//             fluid {\n//               ...GatsbyImageSharpFluid_withWebp\n//             }\n//           }\n//         }\n//       }\n//     }\n//   }\n// `;\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","t","a","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","Navbar","dropdownShown","setDropdownShown","useState","activeDropDown","setActiveDropdown","handleDropdown","DropdownModalSolutions","navBlockCounter","linksCounter","React","solutionsData","data","title","links","link","Link","to","route","viewBox","fill","xmlns","id","onClick","fillRule","clipRule","href","Footer","clipPath","transform","Layout","_ref","RequestDemoButton","ReviewCard","avatar","reviewerInfo","brandImage","reviewText","StarListItem","props","text","AwardStars","star","stroke","Home","StaticImage","require"],"sourceRoot":""}